# Makefile.in generated by automake 1.16.5 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#(Copyright 2005-2020 Kendall F. Morris
#
# This file is part of the USF Neural Simulator suite.
#
#     The Neural Simulator suite is free software: you can redistribute
#     it and/or modify it under the terms of the GNU General Public
#     License as published by the Free Software Foundation, either
#     version 3 of the License, or (at your option) any later version.
#
#     The suite is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with the suite.  If not, see <https://www.gnu.org/licenses/>.
#




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/usfsim
pkgincludedir = $(includedir)/usfsim
pkglibdir = $(libdir)/usfsim
pkglibexecdir = $(libexecdir)/usfsim
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = simbuild.exe$(EXEEXT) simrun.exe$(EXEEXT) \
	simviewer.exe$(EXEEXT) simmsg.exe$(EXEEXT) \
	edt2spike2.exe$(EXEEXT) makesine.exe$(EXEEXT) \
	wave2daq.exe$(EXEEXT) simbuild$(EXEEXT) simrun$(EXEEXT) \
	simviewer$(EXEEXT) simmsg$(EXEEXT) edt2spike2$(EXEEXT) \
	wave2daq$(EXEEXT) simpickwave$(EXEEXT) simpickedt$(EXEEXT) \
	simtxt2flt$(EXEEXT) simmerge$(EXEEXT) makesine$(EXEEXT) \
	rplssimc_p$(EXEEXT) $(am__EXEEXT_1)
#am__append_1 = simspectrum
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(dist_bin_SCRIPTS) $(dist_doc_DATA) \
	$(dist_pkgdata_DATA) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
#am__EXEEXT_1 = simspectrum$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(docdir)" "$(DESTDIR)$(pkgdatadir)"
PROGRAMS = $(bin_PROGRAMS)
am_edt2spike2_OBJECTS = edt2spike2-edt2spike2.$(OBJEXT)
edt2spike2_OBJECTS = $(am_edt2spike2_OBJECTS)
edt2spike2_DEPENDENCIES =
edt2spike2_LINK = $(CXXLD) $(edt2spike2_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am__objects_1 = edt2spike2.$(OBJEXT)
am_edt2spike2_exe_OBJECTS = $(am__objects_1)
edt2spike2_exe_OBJECTS = $(am_edt2spike2_exe_OBJECTS)
edt2spike2_exe_LDADD = $(LDADD)
edt2spike2_exe_DEPENDENCIES = $(LIBOBJS)
am_makesine_OBJECTS = makesine-makesine.$(OBJEXT)
makesine_OBJECTS = $(am_makesine_OBJECTS)
makesine_DEPENDENCIES =
makesine_LINK = $(CXXLD) $(makesine_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am__objects_2 = makesine.$(OBJEXT)
am_makesine_exe_OBJECTS = $(am__objects_2)
makesine_exe_OBJECTS = $(am_makesine_exe_OBJECTS)
makesine_exe_LDADD = $(LDADD)
makesine_exe_DEPENDENCIES = $(LIBOBJS)
am_rplssimc_p_OBJECTS = rplssimc_p-rplssimc_p.$(OBJEXT)
rplssimc_p_OBJECTS = $(am_rplssimc_p_OBJECTS)
rplssimc_p_LDADD = $(LDADD)
rplssimc_p_DEPENDENCIES = $(LIBOBJS)
rplssimc_p_LINK = $(CXXLD) $(rplssimc_p_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am__objects_3 = simbuild-moc_simwin.$(OBJEXT) \
	simbuild-moc_simscene.$(OBJEXT) \
	simbuild-moc_launchwindow.$(OBJEXT) \
	simbuild-moc_launch_model.$(OBJEXT) \
	simbuild-moc_simview.$(OBJEXT) simbuild-qrc_simbuild.$(OBJEXT) \
	simbuild-moc_helpbox.$(OBJEXT) \
	simbuild-moc_selectaxonsyn.$(OBJEXT) \
	simbuild-moc_sim_proc.$(OBJEXT) \
	simbuild-moc_build_model.$(OBJEXT) \
	simbuild-moc_synview.$(OBJEXT) simbuild-moc_affmodel.$(OBJEXT) \
	simbuild-moc_finddialog.$(OBJEXT) \
	simbuild-moc_slope_spin.$(OBJEXT)
am__objects_4 = simbuild-simmain.$(OBJEXT) simbuild-simwin.$(OBJEXT) \
	simbuild-sim_impl.$(OBJEXT) simbuild-simview.$(OBJEXT) \
	simbuild-simscene.$(OBJEXT) simbuild-sim2build.$(OBJEXT) \
	fileio.$(OBJEXT) swap.$(OBJEXT) util.$(OBJEXT) \
	build_hash.$(OBJEXT) sim_hash.$(OBJEXT) \
	simbuild-simscene_export.$(OBJEXT) \
	simbuild-simscene_draw.$(OBJEXT) \
	simbuild-launchwindow.$(OBJEXT) simbuild-affmodel.$(OBJEXT) \
	simbuild-launch_impl.$(OBJEXT) simbuild-launch_model.$(OBJEXT) \
	c_globals.$(OBJEXT) simbuild-colormap.$(OBJEXT) \
	node_mgr.$(OBJEXT) simbuild-helpbox.$(OBJEXT) \
	simbuild-simnodes.$(OBJEXT) simbuild-selectaxonsyn.$(OBJEXT) \
	simbuild-sim_proc.$(OBJEXT) simbuild-build_model.$(OBJEXT) \
	simbuild-synview.$(OBJEXT) simbuild-chglog.$(OBJEXT) \
	lin2ms.$(OBJEXT) wavemarkers.$(OBJEXT) \
	simbuild-finddialog.$(OBJEXT) simbuild-slope_spin.$(OBJEXT)
am_simbuild_OBJECTS = $(am__objects_3) $(am__objects_4)
simbuild_OBJECTS = $(am_simbuild_OBJECTS)
simbuild_LDADD = $(LDADD)
simbuild_DEPENDENCIES = $(LIBOBJS)
simbuild_LINK = $(CXXLD) $(simbuild_CXXFLAGS) $(CXXFLAGS) \
	$(simbuild_LDFLAGS) $(LDFLAGS) -o $@
am__objects_5 = moc_simwin.$(OBJEXT) moc_simscene.$(OBJEXT) \
	moc_launchwindow.$(OBJEXT) moc_launch_model.$(OBJEXT) \
	moc_simview.$(OBJEXT) qrc_simbuild.$(OBJEXT) \
	moc_helpbox.$(OBJEXT) moc_selectaxonsyn.$(OBJEXT) \
	moc_sim_proc.$(OBJEXT) moc_build_model.$(OBJEXT) \
	moc_synview.$(OBJEXT) moc_affmodel.$(OBJEXT) \
	moc_finddialog.$(OBJEXT) moc_slope_spin.$(OBJEXT)
am__objects_6 = simmain.$(OBJEXT) simwin.$(OBJEXT) sim_impl.$(OBJEXT) \
	simview.$(OBJEXT) simscene.$(OBJEXT) sim2build.$(OBJEXT) \
	fileio.$(OBJEXT) swap.$(OBJEXT) util.$(OBJEXT) \
	build_hash.$(OBJEXT) sim_hash.$(OBJEXT) \
	simscene_export.$(OBJEXT) simscene_draw.$(OBJEXT) \
	launchwindow.$(OBJEXT) affmodel.$(OBJEXT) \
	launch_impl.$(OBJEXT) launch_model.$(OBJEXT) \
	c_globals.$(OBJEXT) colormap.$(OBJEXT) node_mgr.$(OBJEXT) \
	helpbox.$(OBJEXT) simnodes.$(OBJEXT) selectaxonsyn.$(OBJEXT) \
	sim_proc.$(OBJEXT) build_model.$(OBJEXT) synview.$(OBJEXT) \
	chglog.$(OBJEXT) lin2ms.$(OBJEXT) wavemarkers.$(OBJEXT) \
	finddialog.$(OBJEXT) slope_spin.$(OBJEXT)
am__objects_7 = $(am__objects_5) $(am__objects_6)
am_simbuild_exe_OBJECTS = $(am__objects_7)
simbuild_exe_OBJECTS = $(am_simbuild_exe_OBJECTS)
simbuild_exe_LDADD = $(LDADD)
simbuild_exe_DEPENDENCIES = $(LIBOBJS)
am_simmerge_OBJECTS = simmerge.$(OBJEXT)
simmerge_OBJECTS = $(am_simmerge_OBJECTS)
simmerge_LDADD = $(LDADD)
simmerge_DEPENDENCIES = $(LIBOBJS)
am__objects_8 = moc_simmsg.$(OBJEXT)
am_simmsg_OBJECTS = simmsg.$(OBJEXT) $(am__objects_8)
simmsg_OBJECTS = $(am_simmsg_OBJECTS)
simmsg_LDADD = $(LDADD)
simmsg_DEPENDENCIES = $(LIBOBJS)
am__objects_9 = simmsg.$(OBJEXT) $(am__objects_8)
am_simmsg_exe_OBJECTS = $(am__objects_9)
simmsg_exe_OBJECTS = $(am_simmsg_exe_OBJECTS)
simmsg_exe_LDADD = $(LDADD)
simmsg_exe_DEPENDENCIES = $(LIBOBJS)
am_simpickedt_OBJECTS = simpickedt.$(OBJEXT)
simpickedt_OBJECTS = $(am_simpickedt_OBJECTS)
simpickedt_LDADD = $(LDADD)
simpickedt_DEPENDENCIES = $(LIBOBJS)
am_simpickwave_OBJECTS = simpickwave.$(OBJEXT)
simpickwave_OBJECTS = $(am_simpickwave_OBJECTS)
simpickwave_LDADD = $(LDADD)
simpickwave_DEPENDENCIES = $(LIBOBJS)
am_simrun_OBJECTS = read_sim.$(OBJEXT) build_network.$(OBJEXT) \
	simloop.$(OBJEXT) sim.$(OBJEXT) update.$(OBJEXT) \
	fileio.$(OBJEXT) sim_hash.$(OBJEXT) util.$(OBJEXT) \
	build_hash.$(OBJEXT) sample_cells.$(OBJEXT) lung.$(OBJEXT) \
	simrun-expr.$(OBJEXT) lin2ms.$(OBJEXT) wavemarkers.$(OBJEXT) \
	simrun-simrun_wrap.$(OBJEXT) simrun-add_IandE.$(OBJEXT)
simrun_OBJECTS = $(am_simrun_OBJECTS)
am__DEPENDENCIES_1 = $(LIBOBJS)
simrun_DEPENDENCIES = $(am__DEPENDENCIES_1)
simrun_LINK = $(CXXLD) $(simrun_CXXFLAGS) $(CXXFLAGS) \
	$(simrun_LDFLAGS) $(LDFLAGS) -o $@
am__objects_10 = read_sim.$(OBJEXT) build_network.$(OBJEXT) \
	simloop.$(OBJEXT) sim.$(OBJEXT) update.$(OBJEXT) \
	fileio.$(OBJEXT) sim_hash.$(OBJEXT) util.$(OBJEXT) \
	build_hash.$(OBJEXT) sample_cells.$(OBJEXT) lung.$(OBJEXT) \
	expr.$(OBJEXT) lin2ms.$(OBJEXT) wavemarkers.$(OBJEXT) \
	simrun_wrap.$(OBJEXT) add_IandE.$(OBJEXT)
am_simrun_exe_OBJECTS = $(am__objects_10)
simrun_exe_OBJECTS = $(am_simrun_exe_OBJECTS)
simrun_exe_LDADD = $(LDADD)
simrun_exe_DEPENDENCIES = $(LIBOBJS)
am_simspectrum_OBJECTS = simspectrum.$(OBJEXT) util.$(OBJEXT)
simspectrum_OBJECTS = $(am_simspectrum_OBJECTS)
simspectrum_DEPENDENCIES =
simspectrum_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(simspectrum_LDFLAGS) $(LDFLAGS) -o $@
am_simtxt2flt_OBJECTS = simtxt2flt.$(OBJEXT)
simtxt2flt_OBJECTS = $(am_simtxt2flt_OBJECTS)
simtxt2flt_LDADD = $(LDADD)
simtxt2flt_DEPENDENCIES = $(LIBOBJS)
am__objects_11 = simviewer-moc_simviewer.$(OBJEXT) \
	simviewer-qrc_simviewer.$(OBJEXT)
am__objects_12 = simviewer-simviewer.$(OBJEXT) \
	simviewer-simviewer_impl.$(OBJEXT) \
	simviewer-simviewermain.$(OBJEXT) lin2ms.$(OBJEXT) \
	wavemarkers.$(OBJEXT)
am_simviewer_OBJECTS = $(am__objects_11) $(am__objects_12)
simviewer_OBJECTS = $(am_simviewer_OBJECTS)
simviewer_LDADD = $(LDADD)
simviewer_DEPENDENCIES = $(LIBOBJS)
simviewer_LINK = $(CXXLD) $(simviewer_CXXFLAGS) $(CXXFLAGS) \
	$(simviewer_LDFLAGS) $(LDFLAGS) -o $@
am__objects_13 = moc_simviewer.$(OBJEXT) qrc_simviewer.$(OBJEXT)
am__objects_14 = simviewer.$(OBJEXT) simviewer_impl.$(OBJEXT) \
	simviewermain.$(OBJEXT) lin2ms.$(OBJEXT) wavemarkers.$(OBJEXT)
am__objects_15 = $(am__objects_13) $(am__objects_14)
am_simviewer_exe_OBJECTS = $(am__objects_15)
simviewer_exe_OBJECTS = $(am_simviewer_exe_OBJECTS)
simviewer_exe_LDADD = $(LDADD)
simviewer_exe_DEPENDENCIES = $(LIBOBJS)
am_wave2daq_OBJECTS = wave2daq-wave2daq.$(OBJEXT)
wave2daq_OBJECTS = $(am_wave2daq_OBJECTS)
wave2daq_LDADD = $(LDADD)
wave2daq_DEPENDENCIES = $(LIBOBJS)
wave2daq_LINK = $(CXXLD) $(wave2daq_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am__objects_16 = wave2daq.$(OBJEXT)
am_wave2daq_exe_OBJECTS = $(am__objects_16)
wave2daq_exe_OBJECTS = $(am_wave2daq_exe_OBJECTS)
wave2daq_exe_LDADD = $(LDADD)
wave2daq_exe_DEPENDENCIES = $(LIBOBJS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(dist_bin_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/add_IandE.Po ./$(DEPDIR)/affmodel.Po \
	./$(DEPDIR)/build_hash.Po ./$(DEPDIR)/build_model.Po \
	./$(DEPDIR)/build_network.Po ./$(DEPDIR)/c_globals.Po \
	./$(DEPDIR)/chglog.Po ./$(DEPDIR)/colormap.Po \
	./$(DEPDIR)/edt2spike2-edt2spike2.Po ./$(DEPDIR)/edt2spike2.Po \
	./$(DEPDIR)/expr.Po ./$(DEPDIR)/fileio.Po \
	./$(DEPDIR)/finddialog.Po ./$(DEPDIR)/helpbox.Po \
	./$(DEPDIR)/launch_impl.Po ./$(DEPDIR)/launch_model.Po \
	./$(DEPDIR)/launchwindow.Po ./$(DEPDIR)/lin2ms.Po \
	./$(DEPDIR)/lung.Po ./$(DEPDIR)/makesine-makesine.Po \
	./$(DEPDIR)/makesine.Po ./$(DEPDIR)/moc_affmodel.Po \
	./$(DEPDIR)/moc_build_model.Po ./$(DEPDIR)/moc_finddialog.Po \
	./$(DEPDIR)/moc_helpbox.Po ./$(DEPDIR)/moc_launch_model.Po \
	./$(DEPDIR)/moc_launchwindow.Po \
	./$(DEPDIR)/moc_selectaxonsyn.Po ./$(DEPDIR)/moc_sim_proc.Po \
	./$(DEPDIR)/moc_simmsg.Po ./$(DEPDIR)/moc_simscene.Po \
	./$(DEPDIR)/moc_simview.Po ./$(DEPDIR)/moc_simviewer.Po \
	./$(DEPDIR)/moc_simwin.Po ./$(DEPDIR)/moc_slope_spin.Po \
	./$(DEPDIR)/moc_synview.Po ./$(DEPDIR)/node_mgr.Po \
	./$(DEPDIR)/qrc_simbuild.Po ./$(DEPDIR)/qrc_simviewer.Po \
	./$(DEPDIR)/read_sim.Po ./$(DEPDIR)/rplssimc_p-rplssimc_p.Po \
	./$(DEPDIR)/sample_cells.Po ./$(DEPDIR)/selectaxonsyn.Po \
	./$(DEPDIR)/sim.Po ./$(DEPDIR)/sim2build.Po \
	./$(DEPDIR)/sim_hash.Po ./$(DEPDIR)/sim_impl.Po \
	./$(DEPDIR)/sim_proc.Po ./$(DEPDIR)/simbuild-affmodel.Po \
	./$(DEPDIR)/simbuild-build_model.Po \
	./$(DEPDIR)/simbuild-chglog.Po \
	./$(DEPDIR)/simbuild-colormap.Po \
	./$(DEPDIR)/simbuild-finddialog.Po \
	./$(DEPDIR)/simbuild-helpbox.Po \
	./$(DEPDIR)/simbuild-launch_impl.Po \
	./$(DEPDIR)/simbuild-launch_model.Po \
	./$(DEPDIR)/simbuild-launchwindow.Po \
	./$(DEPDIR)/simbuild-moc_affmodel.Po \
	./$(DEPDIR)/simbuild-moc_build_model.Po \
	./$(DEPDIR)/simbuild-moc_finddialog.Po \
	./$(DEPDIR)/simbuild-moc_helpbox.Po \
	./$(DEPDIR)/simbuild-moc_launch_model.Po \
	./$(DEPDIR)/simbuild-moc_launchwindow.Po \
	./$(DEPDIR)/simbuild-moc_selectaxonsyn.Po \
	./$(DEPDIR)/simbuild-moc_sim_proc.Po \
	./$(DEPDIR)/simbuild-moc_simscene.Po \
	./$(DEPDIR)/simbuild-moc_simview.Po \
	./$(DEPDIR)/simbuild-moc_simwin.Po \
	./$(DEPDIR)/simbuild-moc_slope_spin.Po \
	./$(DEPDIR)/simbuild-moc_synview.Po \
	./$(DEPDIR)/simbuild-qrc_simbuild.Po \
	./$(DEPDIR)/simbuild-selectaxonsyn.Po \
	./$(DEPDIR)/simbuild-sim2build.Po \
	./$(DEPDIR)/simbuild-sim_impl.Po \
	./$(DEPDIR)/simbuild-sim_proc.Po \
	./$(DEPDIR)/simbuild-simmain.Po \
	./$(DEPDIR)/simbuild-simnodes.Po \
	./$(DEPDIR)/simbuild-simscene.Po \
	./$(DEPDIR)/simbuild-simscene_draw.Po \
	./$(DEPDIR)/simbuild-simscene_export.Po \
	./$(DEPDIR)/simbuild-simview.Po ./$(DEPDIR)/simbuild-simwin.Po \
	./$(DEPDIR)/simbuild-slope_spin.Po \
	./$(DEPDIR)/simbuild-synview.Po ./$(DEPDIR)/simloop.Po \
	./$(DEPDIR)/simmain.Po ./$(DEPDIR)/simmerge.Po \
	./$(DEPDIR)/simmsg.Po ./$(DEPDIR)/simnodes.Po \
	./$(DEPDIR)/simpickedt.Po ./$(DEPDIR)/simpickwave.Po \
	./$(DEPDIR)/simrun-add_IandE.Po ./$(DEPDIR)/simrun-expr.Po \
	./$(DEPDIR)/simrun-simrun_wrap.Po ./$(DEPDIR)/simrun_wrap.Po \
	./$(DEPDIR)/simscene.Po ./$(DEPDIR)/simscene_draw.Po \
	./$(DEPDIR)/simscene_export.Po ./$(DEPDIR)/simspectrum.Po \
	./$(DEPDIR)/simtxt2flt.Po ./$(DEPDIR)/simview.Po \
	./$(DEPDIR)/simviewer-moc_simviewer.Po \
	./$(DEPDIR)/simviewer-qrc_simviewer.Po \
	./$(DEPDIR)/simviewer-simviewer.Po \
	./$(DEPDIR)/simviewer-simviewer_impl.Po \
	./$(DEPDIR)/simviewer-simviewermain.Po \
	./$(DEPDIR)/simviewer.Po ./$(DEPDIR)/simviewer_impl.Po \
	./$(DEPDIR)/simviewermain.Po ./$(DEPDIR)/simwin.Po \
	./$(DEPDIR)/slope_spin.Po ./$(DEPDIR)/swap.Po \
	./$(DEPDIR)/synview.Po ./$(DEPDIR)/update.Po \
	./$(DEPDIR)/util.Po ./$(DEPDIR)/wave2daq-wave2daq.Po \
	./$(DEPDIR)/wave2daq.Po ./$(DEPDIR)/wavemarkers.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(edt2spike2_SOURCES) $(edt2spike2_exe_SOURCES) \
	$(makesine_SOURCES) $(makesine_exe_SOURCES) \
	$(rplssimc_p_SOURCES) $(simbuild_SOURCES) \
	$(simbuild_exe_SOURCES) $(simmerge_SOURCES) $(simmsg_SOURCES) \
	$(simmsg_exe_SOURCES) $(simpickedt_SOURCES) \
	$(simpickwave_SOURCES) $(simrun_SOURCES) $(simrun_exe_SOURCES) \
	$(simspectrum_SOURCES) $(simtxt2flt_SOURCES) \
	$(simviewer_SOURCES) $(simviewer_exe_SOURCES) \
	$(wave2daq_SOURCES) $(wave2daq_exe_SOURCES)
DIST_SOURCES = $(edt2spike2_SOURCES) $(edt2spike2_exe_SOURCES) \
	$(makesine_SOURCES) $(makesine_exe_SOURCES) \
	$(rplssimc_p_SOURCES) $(simbuild_SOURCES) \
	$(simbuild_exe_SOURCES) $(simmerge_SOURCES) $(simmsg_SOURCES) \
	$(simmsg_exe_SOURCES) $(simpickedt_SOURCES) \
	$(simpickwave_SOURCES) $(simrun_SOURCES) $(simrun_exe_SOURCES) \
	$(simspectrum_SOURCES) $(simtxt2flt_SOURCES) \
	$(simviewer_SOURCES) $(simviewer_exe_SOURCES) \
	$(wave2daq_SOURCES) $(wave2daq_exe_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(dist_doc_DATA) $(dist_pkgdata_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
AM_RECURSIVE_TARGETS = cscope
am__DIST_COMMON = $(srcdir)/Makefile.in AUTHORS COPYING ChangeLog \
	INSTALL NEWS README compile depcomp install-sh missing \
	texinfo.tex
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
# Exists only to be overridden by the user if desired.
AM_DISTCHECK_DVI_TARGET = dvi
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} '/home/john/src/usfsim-1.0.34/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} '/home/john/src/usfsim-1.0.34/missing' autoconf
AUTOHEADER = ${SHELL} '/home/john/src/usfsim-1.0.34/missing' autoheader
AUTOMAKE = ${SHELL} '/home/john/src/usfsim-1.0.34/missing' automake-1.16
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = 
CPP = gcc -E
CPPFLAGS = -I/usr/include/x86_64-linux-gnu/qt5/QtNetwork -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtPrintSupport -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5 
CSCOPE = cscope
CTAGS = ctags
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"usfsim\" -DPACKAGE_TARNAME=\"usfsim\" -DPACKAGE_VERSION=\"1.0.34\" -DPACKAGE_STRING=\"usfsim\ 1.0.34\" -DPACKAGE_BUGREPORT=\"dshuman@usf.edu\" -DPACKAGE_URL=\"\" -DPACKAGE=\"usfsim\" -DVERSION=\"1.0.34\" -DHAVE_STDIO_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_UNISTD_H=1 -DHAVE_WCHAR_H=1 -DSTDC_HEADERS=1 -D_ALL_SOURCE=1 -D_DARWIN_C_SOURCE=1 -D_GNU_SOURCE=1 -D_HPUX_ALT_XOPEN_SOCKET_API=1 -D_NETBSD_SOURCE=1 -D_OPENBSD_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D__STDC_WANT_IEC_60559_ATTRIBS_EXT__=1 -D__STDC_WANT_IEC_60559_BFP_EXT__=1 -D__STDC_WANT_IEC_60559_DFP_EXT__=1 -D__STDC_WANT_IEC_60559_FUNCS_EXT__=1 -D__STDC_WANT_IEC_60559_TYPES_EXT__=1 -D__STDC_WANT_LIB_EXT2__=1 -D__STDC_WANT_MATH_SPEC_FUNCS__=1 -D_TANDEM_SOURCE=1 -D__EXTENSIONS__=1 -DHAVE_FLOAT_H=1 -DHAVE_LIMITS_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_UNISTD_H=1 -DHAVE__USR_INCLUDE_MALLOC_H=1 -DSIZEOF_SIZE_T=8 -DHAVE_STRCHR=1 -DHAVE_ARGP_PARSE=1
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
ETAGS = etags
EXEEXT = 
FFTWLIBDIR = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS =  
LIBOBJS = 
LIBS = -lQt5Network -lQt5PrintSupport -lQt5Widgets -lQt5Gui -lQt5Core  
LTLIBOBJS = 
MAKEINFO = ${SHELL} '/home/john/src/usfsim-1.0.34/missing' makeinfo
MKDIR_P = /bin/mkdir -p
MOC = moc
OBJEXT = o
PACKAGE = usfsim
PACKAGE_BUGREPORT = dshuman@usf.edu
PACKAGE_NAME = usfsim
PACKAGE_STRING = usfsim 1.0.34
PACKAGE_TARNAME = usfsim
PACKAGE_URL = 
PACKAGE_VERSION = 1.0.34
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
QT_CFLAGS = -I/usr/include/x86_64-linux-gnu/qt5/QtNetwork -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtOpenGL -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtPrintSupport -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_LIBS = -lQt5Network -lQt5OpenGL -lQt5PrintSupport -lQt5Widgets -lQt5Gui -lQt5Core
RCC = rcc
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
UIC = uic
VERSION = 1.0.34
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
abs_builddir = /home/john/src/usfsim-1.0.34
abs_srcdir = /home/john/src/usfsim-1.0.34
abs_top_builddir = /home/john/src/usfsim-1.0.34
abs_top_srcdir = /home/john/src/usfsim-1.0.34
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/john/src/usfsim-1.0.34/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
AUTOMAKE_OPTIONS = -Wno-portability
MSWIN_DIR = mswin
#WEBASM_DIR=webasm
LDADD = -lm $(LIBOBJS) -lgsl -lgslcblas
simspectrum_LDADD = -lm -lfftw3f
simspectrum_LDFLAGS = $(FFTWLIBDIR)
simrun_LDADD = $(LDADD) -lmuparser -lson64 -lpthread
DEBUG_OR_NOT = -ggdb3
#DEBUG_OR_NOT= -O2

#AM_CXXFLAGS = $(DEBUG_OR_NOT) -Wall -fPIC
#AM_CXXFLAGS = $(DEBUG_OR_NOT) -Wall -std=c++17 -fPIC -Wno-unused-value -Wno-deprecated-copy -DVERSION=\"$(VERSION)\"
AM_CXXFLAGS = $(DEBUG_OR_NOT) -Wall -std=c++17 -fPIC -Wno-unused-value -Wno-unused-result -Wno-deprecated-copy
#AM_CPPFLAGS = $(DEBUG_OR_NOT) -Wno-unused-value -Wno-deprecated-copy -DVERSION=\"$(VERSION)\"
AM_CPPFLAGS = $(DEBUG_OR_NOT) -DVERSION=\"$(VERSION)\"
AM_CFLAGS = $(DEBUG_OR_NOT) -Wall --std=c11 -Wno-unused-value -Wno-unused-result
dist_bin_SCRIPTS = simpower_spectrum.sh simrenumber
simpickwave_SOURCES = simpickwave.c
simpickedt_SOURCES = simpickedt.c
simspectrum_SOURCES = simspectrum.c util.c
simtxt2flt_SOURCES = simtxt2flt.c
simmerge_SOURCES = simmerge.c

#if HAVE_WEB
#  BUILT_SOURCES += Makefile_simbuild_web514.qt Makefile_simviewer_web514.qt
#endif
BUILT_SOURCES = build_hash.c sim_hash.c inode_hash.h simulator_hash.h \
	$(simbuild_BUILT_SOURCES) $(simviewer_BUILT_SOURCES) \
	$(simmsg_BUILT_SOURCES) Makefile_simbuild.qt \
	Makefile_simviewer.qt Makefile_simmsg.qt Makefile_simrun.qt \
	simbuild_plugin_import.cpp \
	simmsg_plugin_import.cpp simviewer_plugin_import.cpp
simrun_SOURCES = read_sim.c build_network.c simloop.c sim.c update.c \
simulator.h fileio.c sim_hash.c util.c util.h \
build_hash.c fileio.h hash.h simulator_hash.h \
inode.h old_inode.h inode_2.h sample_cells.c sample_cells.h lung.c lung.h expr.cpp \
lin2ms.c lin2ms.h expr.h wavemarkers.c wavemarkers.h simrun_wrap.cpp simrun_wrap.h \
common_def.h add_IandE.cpp

simrun_exe_SOURCES = $(simrun_SOURCES) simrun.pro
simbuild_BUILT_SOURCES = ui_simwin.h ui_launchwindow.h moc_simwin.cpp moc_simscene.cpp \
 moc_launchwindow.cpp moc_launch_model.cpp moc_simview.cpp \
 qrc_simbuild.cpp moc_helpbox.cpp ui_helpbox.h moc_selectaxonsyn.cpp \
 moc_sim_proc.cpp moc_build_model.cpp moc_synview.cpp ui_selectaxonsyn.h \
 moc_affmodel.cpp moc_finddialog.cpp ui_finddialog.h moc_slope_spin.cpp

simbuild_code = simmain.cpp simwin.cpp sim_impl.cpp simview.cpp simview.h simscene.cpp \
 sim2build.cpp fileio.c swap.c swap.h util.c build_hash.c \
 sim_hash.c simwin.ui sim2build.h simscene_export.cpp simscene_draw.cpp \
 launchwindow.cpp launchwindow.ui simwin.h affmodel.cpp affmodel.h launchwindow.h \
 launch_impl.cpp \
 launch_model.cpp launch_model.h simbuild.qrc simbuild.png c_globals.c c_globals.h \
 colormap.cpp colormap.h node_mgr.c helpbox.cpp helpbox.h helpbox.ui \
 simnodes.h simnodes.cpp selectaxonsyn.h selectaxonsyn.cpp selectaxonsyn.ui \
 sim_proc.h sim_proc.cpp build_model.h build_model.cpp synview.h synview.cpp \
 chglog.cpp chglog.h build_syn.png cell_icon.png conn_icon.png simscene.h \
 delete_icon.png fiber_icon.png launch_icon.png quit_icon.png globals_icon.png \
 lin2ms.c lin2ms.h simbuild.ico import_icon.png export_icon.png \
 wavemarkers.c wavemarkers.h finddialog.cpp finddialog.h finddialog.ui \
 slope_spin.cpp slope_spin.h \
 common_def.h leftarrow.png rightarrow.png uparrow.png downarrow.png \
 inode_hash.h

simbuild_SOURCES = $(simbuild_BUILT_SOURCES) $(simbuild_code)
simbuild_exe_SOURCES = $(simbuild_SOURCES) simbuild.pro
simviewer_BUILT_SOURCES = moc_simviewer.cpp ui_simviewer.h qrc_simviewer.cpp
simviewer_code = simviewer.cpp simviewer.h simviewer_impl.cpp simviewermain.cpp \
					 simviewer.ui fittoscreen_icon.png quit_icon.png \
                savetopdf_icon.png simviewer.png simviewer.qrc \
                lin2ms.c lin2ms.h simviewer.ico chdir_icon.png restart_icon.png\
					 wavemarkers.c wavemarkers.h simviewert.png

simviewer_SOURCES = $(simviewer_BUILT_SOURCES) $(simviewer_code)
simviewer_exe_SOURCES = $(simviewer_SOURCES) simviewer.pro
simmsg_BUILT_SOURCES = moc_simmsg.cpp ui_simmsg.h
simmsg_SOURCES = simmsg.cpp simmsg.h simmsg.ui $(simmsg_BUILT_SOURCES)
simmsg_exe_SOURCES = $(simmsg_SOURCES) simmsg.pro
edt2spike2_SOURCES = edt2spike2.cpp
edt2spike2_exe_SOURCES = $(edt2spike2_SOURCES) edt2spike2_win.pro
makesine_SOURCES = makesine.cpp
makesine_exe_SOURCES = $(makesine_SOURCES) makesine_win.pro
rplssimc_p_SOURCES = rplssimc_p.cpp
wave2daq_SOURCES = wave2daq.cpp
wave2daq_exe_SOURCES = $(wave2daq_SOURCES) wave2daq_win.pro
CLEANFILES = ${BUILT_SOURCES} \
             $(MSWIN_DIR)/*.o


#if HAVE_WEB
# CLEANFILES +=$(WEBASM_DIR)/*.o
#endif
EXTRA_DIST = gen_gperf.pl tag.pl inode_choose.c gen_hash.sh \
sim.tex usfsim.tex paramgen.pdf references.bib debian \
simbuild.pro simmsg.pro simviewer.pro simrun.pro \
HOWTO_BUILD_SIM_FOR_WIN

dist_doc_DATA = sim.pdf usfsim.pdf COPYING LICENSE README README_FOR_WINDOWS \
				  COPYRIGHTS ReleaseNotes.odt ReleaseNotes.pdf ChangeLog

LINUX_FILES = simbuild.desktop simviewer.desktop example_model.snd example_model.ols \
				ADDUCTOR-51.v6.snd ADDUCTOR-51.v6.ols learn_demo.snd learn_demo.ols

WIN_FILES = example_modelWIN.snd example_modelWIN.ols \
				ADDUCTOR-51.v6.win.snd ADDUCTOR-51.v6.win.ols \
				learn_demoWIN.snd learn_demoWIN.ols

LW_FILES = def_cell.sned def_fiber.sned def_syn.sned globals.sned \
simbuild.png simviewer.png

dist_pkgdata_DATA = $(LINUX_FILES) $(LW_FILES) $(WIN_FILES) usfsim_win_$(VERSION).zip
checkin_pD = $(LINUX_FILES) $(LW_FILES) $(WIN_FILES)
WINDOWS_FILES = simbuild.exe simrun.exe simviewer.exe simmsg.exe edt2spike2.exe \
				wave2daq.exe makesine.exe $(WIN_FILES) $(LW_FILES) $(dist_doc_DATA)

sim_CPPFLAGS = $(DEBUG_OR_NOT) -I/usr/include/muParser
simbuild_CXXFLAGS = $(AM_CXXFLAGS) `pkg-config --cflags Qt5Gui Qt5Network Qt5Core Qt5Widgets ` -m64 -pipe -W -D_REENTRANT -fPIC ${DEFINES}
simbuild_LDFLAGS = `pkg-config --libs Qt5Gui Qt5Core Qt5Widgets Qt5Network  Qt5PrintSupport  `  -lpthread -Wl,--wrap=getline
simviewer_CXXFLAGS = $(AM_CXXFLAGS) `pkg-config --cflags Qt5Gui Qt5Core Qt5Widgets Qt5PrintSupport` -m64 -pipe -W -D_REENTRANT -fPIC ${DEFINES}
simviewer_LDFLAGS = `pkg-config --libs Qt5Gui Qt5Core Qt5Widgets Qt5PrintSupport  `  -lpthread -Wl,--wrap=getline
#simrun_CXXFLAGS = $(AM_CXXFLAGS) `pkg-config --cflags Qt5Gui Qt5Core Qt5Widgets ` -m64 -pipe -W -D_REENTRANT -fPIC -DS64_NOTDLL ${DEFINES}
simrun_CXXFLAGS = $(AM_CXXFLAGS)  -m64 -pipe -W -D_REENTRANT -fPIC -DS64_NOTDLL ${DEFINES}
#simrun_LDFLAGS = `pkg-config --libs Qt5Gui Qt5Core Qt5Widgets  ` -lpthread -Wl,--wrap=getline
simrun_LDFLAGS = -lpthread -Wl,--wrap=getline
edt2spike2_CXXFLAGS = $(AM_CXXFLAGS) -pipe -W -D_REENTRANT -fPIC
edt2spike2_LDADD = -lson64 -lpthread
makesine_CXXFLAGS = $(AM_CXXFLAGS) -pipe -W -D_REENTRANT -fPIC
makesine_LDADD = -lson64 -lpthread
rplssimc_p_CXXFLAGS = $(AM_CXXFLAGS) -pipe -W -D_REENTRANT -fPIC
wave2daq_CXXFLAGS = $(AM_CXXFLAGS) -pipe -W -D_REENTRANT -fPIC
checkin_files = $(simbuild_code) $(simviewer_code) $(dist_doc_DATA) $(checkin_pD) $(simrun_exe_SOURCES) $(EXTRA_DIST) Makefile.am configure.ac
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

edt2spike2$(EXEEXT): $(edt2spike2_OBJECTS) $(edt2spike2_DEPENDENCIES) $(EXTRA_edt2spike2_DEPENDENCIES) 
	@rm -f edt2spike2$(EXEEXT)
	$(AM_V_CXXLD)$(edt2spike2_LINK) $(edt2spike2_OBJECTS) $(edt2spike2_LDADD) $(LIBS)

makesine$(EXEEXT): $(makesine_OBJECTS) $(makesine_DEPENDENCIES) $(EXTRA_makesine_DEPENDENCIES) 
	@rm -f makesine$(EXEEXT)
	$(AM_V_CXXLD)$(makesine_LINK) $(makesine_OBJECTS) $(makesine_LDADD) $(LIBS)

rplssimc_p$(EXEEXT): $(rplssimc_p_OBJECTS) $(rplssimc_p_DEPENDENCIES) $(EXTRA_rplssimc_p_DEPENDENCIES) 
	@rm -f rplssimc_p$(EXEEXT)
	$(AM_V_CXXLD)$(rplssimc_p_LINK) $(rplssimc_p_OBJECTS) $(rplssimc_p_LDADD) $(LIBS)

simbuild$(EXEEXT): $(simbuild_OBJECTS) $(simbuild_DEPENDENCIES) $(EXTRA_simbuild_DEPENDENCIES) 
	@rm -f simbuild$(EXEEXT)
	$(AM_V_CXXLD)$(simbuild_LINK) $(simbuild_OBJECTS) $(simbuild_LDADD) $(LIBS)

simmerge$(EXEEXT): $(simmerge_OBJECTS) $(simmerge_DEPENDENCIES) $(EXTRA_simmerge_DEPENDENCIES) 
	@rm -f simmerge$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(simmerge_OBJECTS) $(simmerge_LDADD) $(LIBS)

simmsg$(EXEEXT): $(simmsg_OBJECTS) $(simmsg_DEPENDENCIES) $(EXTRA_simmsg_DEPENDENCIES) 
	@rm -f simmsg$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(simmsg_OBJECTS) $(simmsg_LDADD) $(LIBS)

simpickedt$(EXEEXT): $(simpickedt_OBJECTS) $(simpickedt_DEPENDENCIES) $(EXTRA_simpickedt_DEPENDENCIES) 
	@rm -f simpickedt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(simpickedt_OBJECTS) $(simpickedt_LDADD) $(LIBS)

simpickwave$(EXEEXT): $(simpickwave_OBJECTS) $(simpickwave_DEPENDENCIES) $(EXTRA_simpickwave_DEPENDENCIES) 
	@rm -f simpickwave$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(simpickwave_OBJECTS) $(simpickwave_LDADD) $(LIBS)

simrun$(EXEEXT): $(simrun_OBJECTS) $(simrun_DEPENDENCIES) $(EXTRA_simrun_DEPENDENCIES) 
	@rm -f simrun$(EXEEXT)
	$(AM_V_CXXLD)$(simrun_LINK) $(simrun_OBJECTS) $(simrun_LDADD) $(LIBS)

simspectrum$(EXEEXT): $(simspectrum_OBJECTS) $(simspectrum_DEPENDENCIES) $(EXTRA_simspectrum_DEPENDENCIES) 
	@rm -f simspectrum$(EXEEXT)
	$(AM_V_CCLD)$(simspectrum_LINK) $(simspectrum_OBJECTS) $(simspectrum_LDADD) $(LIBS)

simtxt2flt$(EXEEXT): $(simtxt2flt_OBJECTS) $(simtxt2flt_DEPENDENCIES) $(EXTRA_simtxt2flt_DEPENDENCIES) 
	@rm -f simtxt2flt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(simtxt2flt_OBJECTS) $(simtxt2flt_LDADD) $(LIBS)

simviewer$(EXEEXT): $(simviewer_OBJECTS) $(simviewer_DEPENDENCIES) $(EXTRA_simviewer_DEPENDENCIES) 
	@rm -f simviewer$(EXEEXT)
	$(AM_V_CXXLD)$(simviewer_LINK) $(simviewer_OBJECTS) $(simviewer_LDADD) $(LIBS)

wave2daq$(EXEEXT): $(wave2daq_OBJECTS) $(wave2daq_DEPENDENCIES) $(EXTRA_wave2daq_DEPENDENCIES) 
	@rm -f wave2daq$(EXEEXT)
	$(AM_V_CXXLD)$(wave2daq_LINK) $(wave2daq_OBJECTS) $(wave2daq_LDADD) $(LIBS)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/add_IandE.Po # am--include-marker
include ./$(DEPDIR)/affmodel.Po # am--include-marker
include ./$(DEPDIR)/build_hash.Po # am--include-marker
include ./$(DEPDIR)/build_model.Po # am--include-marker
include ./$(DEPDIR)/build_network.Po # am--include-marker
include ./$(DEPDIR)/c_globals.Po # am--include-marker
include ./$(DEPDIR)/chglog.Po # am--include-marker
include ./$(DEPDIR)/colormap.Po # am--include-marker
include ./$(DEPDIR)/edt2spike2-edt2spike2.Po # am--include-marker
include ./$(DEPDIR)/edt2spike2.Po # am--include-marker
include ./$(DEPDIR)/expr.Po # am--include-marker
include ./$(DEPDIR)/fileio.Po # am--include-marker
include ./$(DEPDIR)/finddialog.Po # am--include-marker
include ./$(DEPDIR)/helpbox.Po # am--include-marker
include ./$(DEPDIR)/launch_impl.Po # am--include-marker
include ./$(DEPDIR)/launch_model.Po # am--include-marker
include ./$(DEPDIR)/launchwindow.Po # am--include-marker
include ./$(DEPDIR)/lin2ms.Po # am--include-marker
include ./$(DEPDIR)/lung.Po # am--include-marker
include ./$(DEPDIR)/makesine-makesine.Po # am--include-marker
include ./$(DEPDIR)/makesine.Po # am--include-marker
include ./$(DEPDIR)/moc_affmodel.Po # am--include-marker
include ./$(DEPDIR)/moc_build_model.Po # am--include-marker
include ./$(DEPDIR)/moc_finddialog.Po # am--include-marker
include ./$(DEPDIR)/moc_helpbox.Po # am--include-marker
include ./$(DEPDIR)/moc_launch_model.Po # am--include-marker
include ./$(DEPDIR)/moc_launchwindow.Po # am--include-marker
include ./$(DEPDIR)/moc_selectaxonsyn.Po # am--include-marker
include ./$(DEPDIR)/moc_sim_proc.Po # am--include-marker
include ./$(DEPDIR)/moc_simmsg.Po # am--include-marker
include ./$(DEPDIR)/moc_simscene.Po # am--include-marker
include ./$(DEPDIR)/moc_simview.Po # am--include-marker
include ./$(DEPDIR)/moc_simviewer.Po # am--include-marker
include ./$(DEPDIR)/moc_simwin.Po # am--include-marker
include ./$(DEPDIR)/moc_slope_spin.Po # am--include-marker
include ./$(DEPDIR)/moc_synview.Po # am--include-marker
include ./$(DEPDIR)/node_mgr.Po # am--include-marker
include ./$(DEPDIR)/qrc_simbuild.Po # am--include-marker
include ./$(DEPDIR)/qrc_simviewer.Po # am--include-marker
include ./$(DEPDIR)/read_sim.Po # am--include-marker
include ./$(DEPDIR)/rplssimc_p-rplssimc_p.Po # am--include-marker
include ./$(DEPDIR)/sample_cells.Po # am--include-marker
include ./$(DEPDIR)/selectaxonsyn.Po # am--include-marker
include ./$(DEPDIR)/sim.Po # am--include-marker
include ./$(DEPDIR)/sim2build.Po # am--include-marker
include ./$(DEPDIR)/sim_hash.Po # am--include-marker
include ./$(DEPDIR)/sim_impl.Po # am--include-marker
include ./$(DEPDIR)/sim_proc.Po # am--include-marker
include ./$(DEPDIR)/simbuild-affmodel.Po # am--include-marker
include ./$(DEPDIR)/simbuild-build_model.Po # am--include-marker
include ./$(DEPDIR)/simbuild-chglog.Po # am--include-marker
include ./$(DEPDIR)/simbuild-colormap.Po # am--include-marker
include ./$(DEPDIR)/simbuild-finddialog.Po # am--include-marker
include ./$(DEPDIR)/simbuild-helpbox.Po # am--include-marker
include ./$(DEPDIR)/simbuild-launch_impl.Po # am--include-marker
include ./$(DEPDIR)/simbuild-launch_model.Po # am--include-marker
include ./$(DEPDIR)/simbuild-launchwindow.Po # am--include-marker
include ./$(DEPDIR)/simbuild-moc_affmodel.Po # am--include-marker
include ./$(DEPDIR)/simbuild-moc_build_model.Po # am--include-marker
include ./$(DEPDIR)/simbuild-moc_finddialog.Po # am--include-marker
include ./$(DEPDIR)/simbuild-moc_helpbox.Po # am--include-marker
include ./$(DEPDIR)/simbuild-moc_launch_model.Po # am--include-marker
include ./$(DEPDIR)/simbuild-moc_launchwindow.Po # am--include-marker
include ./$(DEPDIR)/simbuild-moc_selectaxonsyn.Po # am--include-marker
include ./$(DEPDIR)/simbuild-moc_sim_proc.Po # am--include-marker
include ./$(DEPDIR)/simbuild-moc_simscene.Po # am--include-marker
include ./$(DEPDIR)/simbuild-moc_simview.Po # am--include-marker
include ./$(DEPDIR)/simbuild-moc_simwin.Po # am--include-marker
include ./$(DEPDIR)/simbuild-moc_slope_spin.Po # am--include-marker
include ./$(DEPDIR)/simbuild-moc_synview.Po # am--include-marker
include ./$(DEPDIR)/simbuild-qrc_simbuild.Po # am--include-marker
include ./$(DEPDIR)/simbuild-selectaxonsyn.Po # am--include-marker
include ./$(DEPDIR)/simbuild-sim2build.Po # am--include-marker
include ./$(DEPDIR)/simbuild-sim_impl.Po # am--include-marker
include ./$(DEPDIR)/simbuild-sim_proc.Po # am--include-marker
include ./$(DEPDIR)/simbuild-simmain.Po # am--include-marker
include ./$(DEPDIR)/simbuild-simnodes.Po # am--include-marker
include ./$(DEPDIR)/simbuild-simscene.Po # am--include-marker
include ./$(DEPDIR)/simbuild-simscene_draw.Po # am--include-marker
include ./$(DEPDIR)/simbuild-simscene_export.Po # am--include-marker
include ./$(DEPDIR)/simbuild-simview.Po # am--include-marker
include ./$(DEPDIR)/simbuild-simwin.Po # am--include-marker
include ./$(DEPDIR)/simbuild-slope_spin.Po # am--include-marker
include ./$(DEPDIR)/simbuild-synview.Po # am--include-marker
include ./$(DEPDIR)/simloop.Po # am--include-marker
include ./$(DEPDIR)/simmain.Po # am--include-marker
include ./$(DEPDIR)/simmerge.Po # am--include-marker
include ./$(DEPDIR)/simmsg.Po # am--include-marker
include ./$(DEPDIR)/simnodes.Po # am--include-marker
include ./$(DEPDIR)/simpickedt.Po # am--include-marker
include ./$(DEPDIR)/simpickwave.Po # am--include-marker
include ./$(DEPDIR)/simrun-add_IandE.Po # am--include-marker
include ./$(DEPDIR)/simrun-expr.Po # am--include-marker
include ./$(DEPDIR)/simrun-simrun_wrap.Po # am--include-marker
include ./$(DEPDIR)/simrun_wrap.Po # am--include-marker
include ./$(DEPDIR)/simscene.Po # am--include-marker
include ./$(DEPDIR)/simscene_draw.Po # am--include-marker
include ./$(DEPDIR)/simscene_export.Po # am--include-marker
include ./$(DEPDIR)/simspectrum.Po # am--include-marker
include ./$(DEPDIR)/simtxt2flt.Po # am--include-marker
include ./$(DEPDIR)/simview.Po # am--include-marker
include ./$(DEPDIR)/simviewer-moc_simviewer.Po # am--include-marker
include ./$(DEPDIR)/simviewer-qrc_simviewer.Po # am--include-marker
include ./$(DEPDIR)/simviewer-simviewer.Po # am--include-marker
include ./$(DEPDIR)/simviewer-simviewer_impl.Po # am--include-marker
include ./$(DEPDIR)/simviewer-simviewermain.Po # am--include-marker
include ./$(DEPDIR)/simviewer.Po # am--include-marker
include ./$(DEPDIR)/simviewer_impl.Po # am--include-marker
include ./$(DEPDIR)/simviewermain.Po # am--include-marker
include ./$(DEPDIR)/simwin.Po # am--include-marker
include ./$(DEPDIR)/slope_spin.Po # am--include-marker
include ./$(DEPDIR)/swap.Po # am--include-marker
include ./$(DEPDIR)/synview.Po # am--include-marker
include ./$(DEPDIR)/update.Po # am--include-marker
include ./$(DEPDIR)/util.Po # am--include-marker
include ./$(DEPDIR)/wave2daq-wave2daq.Po # am--include-marker
include ./$(DEPDIR)/wave2daq.Po # am--include-marker
include ./$(DEPDIR)/wavemarkers.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

edt2spike2-edt2spike2.o: edt2spike2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(edt2spike2_CXXFLAGS) $(CXXFLAGS) -MT edt2spike2-edt2spike2.o -MD -MP -MF $(DEPDIR)/edt2spike2-edt2spike2.Tpo -c -o edt2spike2-edt2spike2.o `test -f 'edt2spike2.cpp' || echo '$(srcdir)/'`edt2spike2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/edt2spike2-edt2spike2.Tpo $(DEPDIR)/edt2spike2-edt2spike2.Po
#	$(AM_V_CXX)source='edt2spike2.cpp' object='edt2spike2-edt2spike2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(edt2spike2_CXXFLAGS) $(CXXFLAGS) -c -o edt2spike2-edt2spike2.o `test -f 'edt2spike2.cpp' || echo '$(srcdir)/'`edt2spike2.cpp

edt2spike2-edt2spike2.obj: edt2spike2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(edt2spike2_CXXFLAGS) $(CXXFLAGS) -MT edt2spike2-edt2spike2.obj -MD -MP -MF $(DEPDIR)/edt2spike2-edt2spike2.Tpo -c -o edt2spike2-edt2spike2.obj `if test -f 'edt2spike2.cpp'; then $(CYGPATH_W) 'edt2spike2.cpp'; else $(CYGPATH_W) '$(srcdir)/edt2spike2.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/edt2spike2-edt2spike2.Tpo $(DEPDIR)/edt2spike2-edt2spike2.Po
#	$(AM_V_CXX)source='edt2spike2.cpp' object='edt2spike2-edt2spike2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(edt2spike2_CXXFLAGS) $(CXXFLAGS) -c -o edt2spike2-edt2spike2.obj `if test -f 'edt2spike2.cpp'; then $(CYGPATH_W) 'edt2spike2.cpp'; else $(CYGPATH_W) '$(srcdir)/edt2spike2.cpp'; fi`

makesine-makesine.o: makesine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(makesine_CXXFLAGS) $(CXXFLAGS) -MT makesine-makesine.o -MD -MP -MF $(DEPDIR)/makesine-makesine.Tpo -c -o makesine-makesine.o `test -f 'makesine.cpp' || echo '$(srcdir)/'`makesine.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/makesine-makesine.Tpo $(DEPDIR)/makesine-makesine.Po
#	$(AM_V_CXX)source='makesine.cpp' object='makesine-makesine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(makesine_CXXFLAGS) $(CXXFLAGS) -c -o makesine-makesine.o `test -f 'makesine.cpp' || echo '$(srcdir)/'`makesine.cpp

makesine-makesine.obj: makesine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(makesine_CXXFLAGS) $(CXXFLAGS) -MT makesine-makesine.obj -MD -MP -MF $(DEPDIR)/makesine-makesine.Tpo -c -o makesine-makesine.obj `if test -f 'makesine.cpp'; then $(CYGPATH_W) 'makesine.cpp'; else $(CYGPATH_W) '$(srcdir)/makesine.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/makesine-makesine.Tpo $(DEPDIR)/makesine-makesine.Po
#	$(AM_V_CXX)source='makesine.cpp' object='makesine-makesine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(makesine_CXXFLAGS) $(CXXFLAGS) -c -o makesine-makesine.obj `if test -f 'makesine.cpp'; then $(CYGPATH_W) 'makesine.cpp'; else $(CYGPATH_W) '$(srcdir)/makesine.cpp'; fi`

rplssimc_p-rplssimc_p.o: rplssimc_p.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rplssimc_p_CXXFLAGS) $(CXXFLAGS) -MT rplssimc_p-rplssimc_p.o -MD -MP -MF $(DEPDIR)/rplssimc_p-rplssimc_p.Tpo -c -o rplssimc_p-rplssimc_p.o `test -f 'rplssimc_p.cpp' || echo '$(srcdir)/'`rplssimc_p.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/rplssimc_p-rplssimc_p.Tpo $(DEPDIR)/rplssimc_p-rplssimc_p.Po
#	$(AM_V_CXX)source='rplssimc_p.cpp' object='rplssimc_p-rplssimc_p.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rplssimc_p_CXXFLAGS) $(CXXFLAGS) -c -o rplssimc_p-rplssimc_p.o `test -f 'rplssimc_p.cpp' || echo '$(srcdir)/'`rplssimc_p.cpp

rplssimc_p-rplssimc_p.obj: rplssimc_p.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rplssimc_p_CXXFLAGS) $(CXXFLAGS) -MT rplssimc_p-rplssimc_p.obj -MD -MP -MF $(DEPDIR)/rplssimc_p-rplssimc_p.Tpo -c -o rplssimc_p-rplssimc_p.obj `if test -f 'rplssimc_p.cpp'; then $(CYGPATH_W) 'rplssimc_p.cpp'; else $(CYGPATH_W) '$(srcdir)/rplssimc_p.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/rplssimc_p-rplssimc_p.Tpo $(DEPDIR)/rplssimc_p-rplssimc_p.Po
#	$(AM_V_CXX)source='rplssimc_p.cpp' object='rplssimc_p-rplssimc_p.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rplssimc_p_CXXFLAGS) $(CXXFLAGS) -c -o rplssimc_p-rplssimc_p.obj `if test -f 'rplssimc_p.cpp'; then $(CYGPATH_W) 'rplssimc_p.cpp'; else $(CYGPATH_W) '$(srcdir)/rplssimc_p.cpp'; fi`

simbuild-moc_simwin.o: moc_simwin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_simwin.o -MD -MP -MF $(DEPDIR)/simbuild-moc_simwin.Tpo -c -o simbuild-moc_simwin.o `test -f 'moc_simwin.cpp' || echo '$(srcdir)/'`moc_simwin.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_simwin.Tpo $(DEPDIR)/simbuild-moc_simwin.Po
#	$(AM_V_CXX)source='moc_simwin.cpp' object='simbuild-moc_simwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_simwin.o `test -f 'moc_simwin.cpp' || echo '$(srcdir)/'`moc_simwin.cpp

simbuild-moc_simwin.obj: moc_simwin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_simwin.obj -MD -MP -MF $(DEPDIR)/simbuild-moc_simwin.Tpo -c -o simbuild-moc_simwin.obj `if test -f 'moc_simwin.cpp'; then $(CYGPATH_W) 'moc_simwin.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_simwin.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_simwin.Tpo $(DEPDIR)/simbuild-moc_simwin.Po
#	$(AM_V_CXX)source='moc_simwin.cpp' object='simbuild-moc_simwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_simwin.obj `if test -f 'moc_simwin.cpp'; then $(CYGPATH_W) 'moc_simwin.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_simwin.cpp'; fi`

simbuild-moc_simscene.o: moc_simscene.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_simscene.o -MD -MP -MF $(DEPDIR)/simbuild-moc_simscene.Tpo -c -o simbuild-moc_simscene.o `test -f 'moc_simscene.cpp' || echo '$(srcdir)/'`moc_simscene.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_simscene.Tpo $(DEPDIR)/simbuild-moc_simscene.Po
#	$(AM_V_CXX)source='moc_simscene.cpp' object='simbuild-moc_simscene.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_simscene.o `test -f 'moc_simscene.cpp' || echo '$(srcdir)/'`moc_simscene.cpp

simbuild-moc_simscene.obj: moc_simscene.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_simscene.obj -MD -MP -MF $(DEPDIR)/simbuild-moc_simscene.Tpo -c -o simbuild-moc_simscene.obj `if test -f 'moc_simscene.cpp'; then $(CYGPATH_W) 'moc_simscene.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_simscene.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_simscene.Tpo $(DEPDIR)/simbuild-moc_simscene.Po
#	$(AM_V_CXX)source='moc_simscene.cpp' object='simbuild-moc_simscene.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_simscene.obj `if test -f 'moc_simscene.cpp'; then $(CYGPATH_W) 'moc_simscene.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_simscene.cpp'; fi`

simbuild-moc_launchwindow.o: moc_launchwindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_launchwindow.o -MD -MP -MF $(DEPDIR)/simbuild-moc_launchwindow.Tpo -c -o simbuild-moc_launchwindow.o `test -f 'moc_launchwindow.cpp' || echo '$(srcdir)/'`moc_launchwindow.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_launchwindow.Tpo $(DEPDIR)/simbuild-moc_launchwindow.Po
#	$(AM_V_CXX)source='moc_launchwindow.cpp' object='simbuild-moc_launchwindow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_launchwindow.o `test -f 'moc_launchwindow.cpp' || echo '$(srcdir)/'`moc_launchwindow.cpp

simbuild-moc_launchwindow.obj: moc_launchwindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_launchwindow.obj -MD -MP -MF $(DEPDIR)/simbuild-moc_launchwindow.Tpo -c -o simbuild-moc_launchwindow.obj `if test -f 'moc_launchwindow.cpp'; then $(CYGPATH_W) 'moc_launchwindow.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_launchwindow.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_launchwindow.Tpo $(DEPDIR)/simbuild-moc_launchwindow.Po
#	$(AM_V_CXX)source='moc_launchwindow.cpp' object='simbuild-moc_launchwindow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_launchwindow.obj `if test -f 'moc_launchwindow.cpp'; then $(CYGPATH_W) 'moc_launchwindow.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_launchwindow.cpp'; fi`

simbuild-moc_launch_model.o: moc_launch_model.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_launch_model.o -MD -MP -MF $(DEPDIR)/simbuild-moc_launch_model.Tpo -c -o simbuild-moc_launch_model.o `test -f 'moc_launch_model.cpp' || echo '$(srcdir)/'`moc_launch_model.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_launch_model.Tpo $(DEPDIR)/simbuild-moc_launch_model.Po
#	$(AM_V_CXX)source='moc_launch_model.cpp' object='simbuild-moc_launch_model.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_launch_model.o `test -f 'moc_launch_model.cpp' || echo '$(srcdir)/'`moc_launch_model.cpp

simbuild-moc_launch_model.obj: moc_launch_model.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_launch_model.obj -MD -MP -MF $(DEPDIR)/simbuild-moc_launch_model.Tpo -c -o simbuild-moc_launch_model.obj `if test -f 'moc_launch_model.cpp'; then $(CYGPATH_W) 'moc_launch_model.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_launch_model.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_launch_model.Tpo $(DEPDIR)/simbuild-moc_launch_model.Po
#	$(AM_V_CXX)source='moc_launch_model.cpp' object='simbuild-moc_launch_model.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_launch_model.obj `if test -f 'moc_launch_model.cpp'; then $(CYGPATH_W) 'moc_launch_model.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_launch_model.cpp'; fi`

simbuild-moc_simview.o: moc_simview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_simview.o -MD -MP -MF $(DEPDIR)/simbuild-moc_simview.Tpo -c -o simbuild-moc_simview.o `test -f 'moc_simview.cpp' || echo '$(srcdir)/'`moc_simview.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_simview.Tpo $(DEPDIR)/simbuild-moc_simview.Po
#	$(AM_V_CXX)source='moc_simview.cpp' object='simbuild-moc_simview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_simview.o `test -f 'moc_simview.cpp' || echo '$(srcdir)/'`moc_simview.cpp

simbuild-moc_simview.obj: moc_simview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_simview.obj -MD -MP -MF $(DEPDIR)/simbuild-moc_simview.Tpo -c -o simbuild-moc_simview.obj `if test -f 'moc_simview.cpp'; then $(CYGPATH_W) 'moc_simview.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_simview.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_simview.Tpo $(DEPDIR)/simbuild-moc_simview.Po
#	$(AM_V_CXX)source='moc_simview.cpp' object='simbuild-moc_simview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_simview.obj `if test -f 'moc_simview.cpp'; then $(CYGPATH_W) 'moc_simview.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_simview.cpp'; fi`

simbuild-qrc_simbuild.o: qrc_simbuild.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-qrc_simbuild.o -MD -MP -MF $(DEPDIR)/simbuild-qrc_simbuild.Tpo -c -o simbuild-qrc_simbuild.o `test -f 'qrc_simbuild.cpp' || echo '$(srcdir)/'`qrc_simbuild.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-qrc_simbuild.Tpo $(DEPDIR)/simbuild-qrc_simbuild.Po
#	$(AM_V_CXX)source='qrc_simbuild.cpp' object='simbuild-qrc_simbuild.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-qrc_simbuild.o `test -f 'qrc_simbuild.cpp' || echo '$(srcdir)/'`qrc_simbuild.cpp

simbuild-qrc_simbuild.obj: qrc_simbuild.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-qrc_simbuild.obj -MD -MP -MF $(DEPDIR)/simbuild-qrc_simbuild.Tpo -c -o simbuild-qrc_simbuild.obj `if test -f 'qrc_simbuild.cpp'; then $(CYGPATH_W) 'qrc_simbuild.cpp'; else $(CYGPATH_W) '$(srcdir)/qrc_simbuild.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-qrc_simbuild.Tpo $(DEPDIR)/simbuild-qrc_simbuild.Po
#	$(AM_V_CXX)source='qrc_simbuild.cpp' object='simbuild-qrc_simbuild.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-qrc_simbuild.obj `if test -f 'qrc_simbuild.cpp'; then $(CYGPATH_W) 'qrc_simbuild.cpp'; else $(CYGPATH_W) '$(srcdir)/qrc_simbuild.cpp'; fi`

simbuild-moc_helpbox.o: moc_helpbox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_helpbox.o -MD -MP -MF $(DEPDIR)/simbuild-moc_helpbox.Tpo -c -o simbuild-moc_helpbox.o `test -f 'moc_helpbox.cpp' || echo '$(srcdir)/'`moc_helpbox.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_helpbox.Tpo $(DEPDIR)/simbuild-moc_helpbox.Po
#	$(AM_V_CXX)source='moc_helpbox.cpp' object='simbuild-moc_helpbox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_helpbox.o `test -f 'moc_helpbox.cpp' || echo '$(srcdir)/'`moc_helpbox.cpp

simbuild-moc_helpbox.obj: moc_helpbox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_helpbox.obj -MD -MP -MF $(DEPDIR)/simbuild-moc_helpbox.Tpo -c -o simbuild-moc_helpbox.obj `if test -f 'moc_helpbox.cpp'; then $(CYGPATH_W) 'moc_helpbox.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_helpbox.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_helpbox.Tpo $(DEPDIR)/simbuild-moc_helpbox.Po
#	$(AM_V_CXX)source='moc_helpbox.cpp' object='simbuild-moc_helpbox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_helpbox.obj `if test -f 'moc_helpbox.cpp'; then $(CYGPATH_W) 'moc_helpbox.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_helpbox.cpp'; fi`

simbuild-moc_selectaxonsyn.o: moc_selectaxonsyn.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_selectaxonsyn.o -MD -MP -MF $(DEPDIR)/simbuild-moc_selectaxonsyn.Tpo -c -o simbuild-moc_selectaxonsyn.o `test -f 'moc_selectaxonsyn.cpp' || echo '$(srcdir)/'`moc_selectaxonsyn.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_selectaxonsyn.Tpo $(DEPDIR)/simbuild-moc_selectaxonsyn.Po
#	$(AM_V_CXX)source='moc_selectaxonsyn.cpp' object='simbuild-moc_selectaxonsyn.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_selectaxonsyn.o `test -f 'moc_selectaxonsyn.cpp' || echo '$(srcdir)/'`moc_selectaxonsyn.cpp

simbuild-moc_selectaxonsyn.obj: moc_selectaxonsyn.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_selectaxonsyn.obj -MD -MP -MF $(DEPDIR)/simbuild-moc_selectaxonsyn.Tpo -c -o simbuild-moc_selectaxonsyn.obj `if test -f 'moc_selectaxonsyn.cpp'; then $(CYGPATH_W) 'moc_selectaxonsyn.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_selectaxonsyn.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_selectaxonsyn.Tpo $(DEPDIR)/simbuild-moc_selectaxonsyn.Po
#	$(AM_V_CXX)source='moc_selectaxonsyn.cpp' object='simbuild-moc_selectaxonsyn.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_selectaxonsyn.obj `if test -f 'moc_selectaxonsyn.cpp'; then $(CYGPATH_W) 'moc_selectaxonsyn.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_selectaxonsyn.cpp'; fi`

simbuild-moc_sim_proc.o: moc_sim_proc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_sim_proc.o -MD -MP -MF $(DEPDIR)/simbuild-moc_sim_proc.Tpo -c -o simbuild-moc_sim_proc.o `test -f 'moc_sim_proc.cpp' || echo '$(srcdir)/'`moc_sim_proc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_sim_proc.Tpo $(DEPDIR)/simbuild-moc_sim_proc.Po
#	$(AM_V_CXX)source='moc_sim_proc.cpp' object='simbuild-moc_sim_proc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_sim_proc.o `test -f 'moc_sim_proc.cpp' || echo '$(srcdir)/'`moc_sim_proc.cpp

simbuild-moc_sim_proc.obj: moc_sim_proc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_sim_proc.obj -MD -MP -MF $(DEPDIR)/simbuild-moc_sim_proc.Tpo -c -o simbuild-moc_sim_proc.obj `if test -f 'moc_sim_proc.cpp'; then $(CYGPATH_W) 'moc_sim_proc.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_sim_proc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_sim_proc.Tpo $(DEPDIR)/simbuild-moc_sim_proc.Po
#	$(AM_V_CXX)source='moc_sim_proc.cpp' object='simbuild-moc_sim_proc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_sim_proc.obj `if test -f 'moc_sim_proc.cpp'; then $(CYGPATH_W) 'moc_sim_proc.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_sim_proc.cpp'; fi`

simbuild-moc_build_model.o: moc_build_model.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_build_model.o -MD -MP -MF $(DEPDIR)/simbuild-moc_build_model.Tpo -c -o simbuild-moc_build_model.o `test -f 'moc_build_model.cpp' || echo '$(srcdir)/'`moc_build_model.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_build_model.Tpo $(DEPDIR)/simbuild-moc_build_model.Po
#	$(AM_V_CXX)source='moc_build_model.cpp' object='simbuild-moc_build_model.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_build_model.o `test -f 'moc_build_model.cpp' || echo '$(srcdir)/'`moc_build_model.cpp

simbuild-moc_build_model.obj: moc_build_model.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_build_model.obj -MD -MP -MF $(DEPDIR)/simbuild-moc_build_model.Tpo -c -o simbuild-moc_build_model.obj `if test -f 'moc_build_model.cpp'; then $(CYGPATH_W) 'moc_build_model.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_build_model.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_build_model.Tpo $(DEPDIR)/simbuild-moc_build_model.Po
#	$(AM_V_CXX)source='moc_build_model.cpp' object='simbuild-moc_build_model.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_build_model.obj `if test -f 'moc_build_model.cpp'; then $(CYGPATH_W) 'moc_build_model.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_build_model.cpp'; fi`

simbuild-moc_synview.o: moc_synview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_synview.o -MD -MP -MF $(DEPDIR)/simbuild-moc_synview.Tpo -c -o simbuild-moc_synview.o `test -f 'moc_synview.cpp' || echo '$(srcdir)/'`moc_synview.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_synview.Tpo $(DEPDIR)/simbuild-moc_synview.Po
#	$(AM_V_CXX)source='moc_synview.cpp' object='simbuild-moc_synview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_synview.o `test -f 'moc_synview.cpp' || echo '$(srcdir)/'`moc_synview.cpp

simbuild-moc_synview.obj: moc_synview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_synview.obj -MD -MP -MF $(DEPDIR)/simbuild-moc_synview.Tpo -c -o simbuild-moc_synview.obj `if test -f 'moc_synview.cpp'; then $(CYGPATH_W) 'moc_synview.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_synview.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_synview.Tpo $(DEPDIR)/simbuild-moc_synview.Po
#	$(AM_V_CXX)source='moc_synview.cpp' object='simbuild-moc_synview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_synview.obj `if test -f 'moc_synview.cpp'; then $(CYGPATH_W) 'moc_synview.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_synview.cpp'; fi`

simbuild-moc_affmodel.o: moc_affmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_affmodel.o -MD -MP -MF $(DEPDIR)/simbuild-moc_affmodel.Tpo -c -o simbuild-moc_affmodel.o `test -f 'moc_affmodel.cpp' || echo '$(srcdir)/'`moc_affmodel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_affmodel.Tpo $(DEPDIR)/simbuild-moc_affmodel.Po
#	$(AM_V_CXX)source='moc_affmodel.cpp' object='simbuild-moc_affmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_affmodel.o `test -f 'moc_affmodel.cpp' || echo '$(srcdir)/'`moc_affmodel.cpp

simbuild-moc_affmodel.obj: moc_affmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_affmodel.obj -MD -MP -MF $(DEPDIR)/simbuild-moc_affmodel.Tpo -c -o simbuild-moc_affmodel.obj `if test -f 'moc_affmodel.cpp'; then $(CYGPATH_W) 'moc_affmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_affmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_affmodel.Tpo $(DEPDIR)/simbuild-moc_affmodel.Po
#	$(AM_V_CXX)source='moc_affmodel.cpp' object='simbuild-moc_affmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_affmodel.obj `if test -f 'moc_affmodel.cpp'; then $(CYGPATH_W) 'moc_affmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_affmodel.cpp'; fi`

simbuild-moc_finddialog.o: moc_finddialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_finddialog.o -MD -MP -MF $(DEPDIR)/simbuild-moc_finddialog.Tpo -c -o simbuild-moc_finddialog.o `test -f 'moc_finddialog.cpp' || echo '$(srcdir)/'`moc_finddialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_finddialog.Tpo $(DEPDIR)/simbuild-moc_finddialog.Po
#	$(AM_V_CXX)source='moc_finddialog.cpp' object='simbuild-moc_finddialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_finddialog.o `test -f 'moc_finddialog.cpp' || echo '$(srcdir)/'`moc_finddialog.cpp

simbuild-moc_finddialog.obj: moc_finddialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_finddialog.obj -MD -MP -MF $(DEPDIR)/simbuild-moc_finddialog.Tpo -c -o simbuild-moc_finddialog.obj `if test -f 'moc_finddialog.cpp'; then $(CYGPATH_W) 'moc_finddialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_finddialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_finddialog.Tpo $(DEPDIR)/simbuild-moc_finddialog.Po
#	$(AM_V_CXX)source='moc_finddialog.cpp' object='simbuild-moc_finddialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_finddialog.obj `if test -f 'moc_finddialog.cpp'; then $(CYGPATH_W) 'moc_finddialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_finddialog.cpp'; fi`

simbuild-moc_slope_spin.o: moc_slope_spin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_slope_spin.o -MD -MP -MF $(DEPDIR)/simbuild-moc_slope_spin.Tpo -c -o simbuild-moc_slope_spin.o `test -f 'moc_slope_spin.cpp' || echo '$(srcdir)/'`moc_slope_spin.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_slope_spin.Tpo $(DEPDIR)/simbuild-moc_slope_spin.Po
#	$(AM_V_CXX)source='moc_slope_spin.cpp' object='simbuild-moc_slope_spin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_slope_spin.o `test -f 'moc_slope_spin.cpp' || echo '$(srcdir)/'`moc_slope_spin.cpp

simbuild-moc_slope_spin.obj: moc_slope_spin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-moc_slope_spin.obj -MD -MP -MF $(DEPDIR)/simbuild-moc_slope_spin.Tpo -c -o simbuild-moc_slope_spin.obj `if test -f 'moc_slope_spin.cpp'; then $(CYGPATH_W) 'moc_slope_spin.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_slope_spin.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-moc_slope_spin.Tpo $(DEPDIR)/simbuild-moc_slope_spin.Po
#	$(AM_V_CXX)source='moc_slope_spin.cpp' object='simbuild-moc_slope_spin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-moc_slope_spin.obj `if test -f 'moc_slope_spin.cpp'; then $(CYGPATH_W) 'moc_slope_spin.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_slope_spin.cpp'; fi`

simbuild-simmain.o: simmain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-simmain.o -MD -MP -MF $(DEPDIR)/simbuild-simmain.Tpo -c -o simbuild-simmain.o `test -f 'simmain.cpp' || echo '$(srcdir)/'`simmain.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-simmain.Tpo $(DEPDIR)/simbuild-simmain.Po
#	$(AM_V_CXX)source='simmain.cpp' object='simbuild-simmain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-simmain.o `test -f 'simmain.cpp' || echo '$(srcdir)/'`simmain.cpp

simbuild-simmain.obj: simmain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-simmain.obj -MD -MP -MF $(DEPDIR)/simbuild-simmain.Tpo -c -o simbuild-simmain.obj `if test -f 'simmain.cpp'; then $(CYGPATH_W) 'simmain.cpp'; else $(CYGPATH_W) '$(srcdir)/simmain.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-simmain.Tpo $(DEPDIR)/simbuild-simmain.Po
#	$(AM_V_CXX)source='simmain.cpp' object='simbuild-simmain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-simmain.obj `if test -f 'simmain.cpp'; then $(CYGPATH_W) 'simmain.cpp'; else $(CYGPATH_W) '$(srcdir)/simmain.cpp'; fi`

simbuild-simwin.o: simwin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-simwin.o -MD -MP -MF $(DEPDIR)/simbuild-simwin.Tpo -c -o simbuild-simwin.o `test -f 'simwin.cpp' || echo '$(srcdir)/'`simwin.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-simwin.Tpo $(DEPDIR)/simbuild-simwin.Po
#	$(AM_V_CXX)source='simwin.cpp' object='simbuild-simwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-simwin.o `test -f 'simwin.cpp' || echo '$(srcdir)/'`simwin.cpp

simbuild-simwin.obj: simwin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-simwin.obj -MD -MP -MF $(DEPDIR)/simbuild-simwin.Tpo -c -o simbuild-simwin.obj `if test -f 'simwin.cpp'; then $(CYGPATH_W) 'simwin.cpp'; else $(CYGPATH_W) '$(srcdir)/simwin.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-simwin.Tpo $(DEPDIR)/simbuild-simwin.Po
#	$(AM_V_CXX)source='simwin.cpp' object='simbuild-simwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-simwin.obj `if test -f 'simwin.cpp'; then $(CYGPATH_W) 'simwin.cpp'; else $(CYGPATH_W) '$(srcdir)/simwin.cpp'; fi`

simbuild-sim_impl.o: sim_impl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-sim_impl.o -MD -MP -MF $(DEPDIR)/simbuild-sim_impl.Tpo -c -o simbuild-sim_impl.o `test -f 'sim_impl.cpp' || echo '$(srcdir)/'`sim_impl.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-sim_impl.Tpo $(DEPDIR)/simbuild-sim_impl.Po
#	$(AM_V_CXX)source='sim_impl.cpp' object='simbuild-sim_impl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-sim_impl.o `test -f 'sim_impl.cpp' || echo '$(srcdir)/'`sim_impl.cpp

simbuild-sim_impl.obj: sim_impl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-sim_impl.obj -MD -MP -MF $(DEPDIR)/simbuild-sim_impl.Tpo -c -o simbuild-sim_impl.obj `if test -f 'sim_impl.cpp'; then $(CYGPATH_W) 'sim_impl.cpp'; else $(CYGPATH_W) '$(srcdir)/sim_impl.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-sim_impl.Tpo $(DEPDIR)/simbuild-sim_impl.Po
#	$(AM_V_CXX)source='sim_impl.cpp' object='simbuild-sim_impl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-sim_impl.obj `if test -f 'sim_impl.cpp'; then $(CYGPATH_W) 'sim_impl.cpp'; else $(CYGPATH_W) '$(srcdir)/sim_impl.cpp'; fi`

simbuild-simview.o: simview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-simview.o -MD -MP -MF $(DEPDIR)/simbuild-simview.Tpo -c -o simbuild-simview.o `test -f 'simview.cpp' || echo '$(srcdir)/'`simview.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-simview.Tpo $(DEPDIR)/simbuild-simview.Po
#	$(AM_V_CXX)source='simview.cpp' object='simbuild-simview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-simview.o `test -f 'simview.cpp' || echo '$(srcdir)/'`simview.cpp

simbuild-simview.obj: simview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-simview.obj -MD -MP -MF $(DEPDIR)/simbuild-simview.Tpo -c -o simbuild-simview.obj `if test -f 'simview.cpp'; then $(CYGPATH_W) 'simview.cpp'; else $(CYGPATH_W) '$(srcdir)/simview.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-simview.Tpo $(DEPDIR)/simbuild-simview.Po
#	$(AM_V_CXX)source='simview.cpp' object='simbuild-simview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-simview.obj `if test -f 'simview.cpp'; then $(CYGPATH_W) 'simview.cpp'; else $(CYGPATH_W) '$(srcdir)/simview.cpp'; fi`

simbuild-simscene.o: simscene.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-simscene.o -MD -MP -MF $(DEPDIR)/simbuild-simscene.Tpo -c -o simbuild-simscene.o `test -f 'simscene.cpp' || echo '$(srcdir)/'`simscene.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-simscene.Tpo $(DEPDIR)/simbuild-simscene.Po
#	$(AM_V_CXX)source='simscene.cpp' object='simbuild-simscene.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-simscene.o `test -f 'simscene.cpp' || echo '$(srcdir)/'`simscene.cpp

simbuild-simscene.obj: simscene.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-simscene.obj -MD -MP -MF $(DEPDIR)/simbuild-simscene.Tpo -c -o simbuild-simscene.obj `if test -f 'simscene.cpp'; then $(CYGPATH_W) 'simscene.cpp'; else $(CYGPATH_W) '$(srcdir)/simscene.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-simscene.Tpo $(DEPDIR)/simbuild-simscene.Po
#	$(AM_V_CXX)source='simscene.cpp' object='simbuild-simscene.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-simscene.obj `if test -f 'simscene.cpp'; then $(CYGPATH_W) 'simscene.cpp'; else $(CYGPATH_W) '$(srcdir)/simscene.cpp'; fi`

simbuild-sim2build.o: sim2build.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-sim2build.o -MD -MP -MF $(DEPDIR)/simbuild-sim2build.Tpo -c -o simbuild-sim2build.o `test -f 'sim2build.cpp' || echo '$(srcdir)/'`sim2build.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-sim2build.Tpo $(DEPDIR)/simbuild-sim2build.Po
#	$(AM_V_CXX)source='sim2build.cpp' object='simbuild-sim2build.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-sim2build.o `test -f 'sim2build.cpp' || echo '$(srcdir)/'`sim2build.cpp

simbuild-sim2build.obj: sim2build.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-sim2build.obj -MD -MP -MF $(DEPDIR)/simbuild-sim2build.Tpo -c -o simbuild-sim2build.obj `if test -f 'sim2build.cpp'; then $(CYGPATH_W) 'sim2build.cpp'; else $(CYGPATH_W) '$(srcdir)/sim2build.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-sim2build.Tpo $(DEPDIR)/simbuild-sim2build.Po
#	$(AM_V_CXX)source='sim2build.cpp' object='simbuild-sim2build.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-sim2build.obj `if test -f 'sim2build.cpp'; then $(CYGPATH_W) 'sim2build.cpp'; else $(CYGPATH_W) '$(srcdir)/sim2build.cpp'; fi`

simbuild-simscene_export.o: simscene_export.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-simscene_export.o -MD -MP -MF $(DEPDIR)/simbuild-simscene_export.Tpo -c -o simbuild-simscene_export.o `test -f 'simscene_export.cpp' || echo '$(srcdir)/'`simscene_export.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-simscene_export.Tpo $(DEPDIR)/simbuild-simscene_export.Po
#	$(AM_V_CXX)source='simscene_export.cpp' object='simbuild-simscene_export.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-simscene_export.o `test -f 'simscene_export.cpp' || echo '$(srcdir)/'`simscene_export.cpp

simbuild-simscene_export.obj: simscene_export.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-simscene_export.obj -MD -MP -MF $(DEPDIR)/simbuild-simscene_export.Tpo -c -o simbuild-simscene_export.obj `if test -f 'simscene_export.cpp'; then $(CYGPATH_W) 'simscene_export.cpp'; else $(CYGPATH_W) '$(srcdir)/simscene_export.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-simscene_export.Tpo $(DEPDIR)/simbuild-simscene_export.Po
#	$(AM_V_CXX)source='simscene_export.cpp' object='simbuild-simscene_export.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-simscene_export.obj `if test -f 'simscene_export.cpp'; then $(CYGPATH_W) 'simscene_export.cpp'; else $(CYGPATH_W) '$(srcdir)/simscene_export.cpp'; fi`

simbuild-simscene_draw.o: simscene_draw.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-simscene_draw.o -MD -MP -MF $(DEPDIR)/simbuild-simscene_draw.Tpo -c -o simbuild-simscene_draw.o `test -f 'simscene_draw.cpp' || echo '$(srcdir)/'`simscene_draw.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-simscene_draw.Tpo $(DEPDIR)/simbuild-simscene_draw.Po
#	$(AM_V_CXX)source='simscene_draw.cpp' object='simbuild-simscene_draw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-simscene_draw.o `test -f 'simscene_draw.cpp' || echo '$(srcdir)/'`simscene_draw.cpp

simbuild-simscene_draw.obj: simscene_draw.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-simscene_draw.obj -MD -MP -MF $(DEPDIR)/simbuild-simscene_draw.Tpo -c -o simbuild-simscene_draw.obj `if test -f 'simscene_draw.cpp'; then $(CYGPATH_W) 'simscene_draw.cpp'; else $(CYGPATH_W) '$(srcdir)/simscene_draw.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-simscene_draw.Tpo $(DEPDIR)/simbuild-simscene_draw.Po
#	$(AM_V_CXX)source='simscene_draw.cpp' object='simbuild-simscene_draw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-simscene_draw.obj `if test -f 'simscene_draw.cpp'; then $(CYGPATH_W) 'simscene_draw.cpp'; else $(CYGPATH_W) '$(srcdir)/simscene_draw.cpp'; fi`

simbuild-launchwindow.o: launchwindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-launchwindow.o -MD -MP -MF $(DEPDIR)/simbuild-launchwindow.Tpo -c -o simbuild-launchwindow.o `test -f 'launchwindow.cpp' || echo '$(srcdir)/'`launchwindow.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-launchwindow.Tpo $(DEPDIR)/simbuild-launchwindow.Po
#	$(AM_V_CXX)source='launchwindow.cpp' object='simbuild-launchwindow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-launchwindow.o `test -f 'launchwindow.cpp' || echo '$(srcdir)/'`launchwindow.cpp

simbuild-launchwindow.obj: launchwindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-launchwindow.obj -MD -MP -MF $(DEPDIR)/simbuild-launchwindow.Tpo -c -o simbuild-launchwindow.obj `if test -f 'launchwindow.cpp'; then $(CYGPATH_W) 'launchwindow.cpp'; else $(CYGPATH_W) '$(srcdir)/launchwindow.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-launchwindow.Tpo $(DEPDIR)/simbuild-launchwindow.Po
#	$(AM_V_CXX)source='launchwindow.cpp' object='simbuild-launchwindow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-launchwindow.obj `if test -f 'launchwindow.cpp'; then $(CYGPATH_W) 'launchwindow.cpp'; else $(CYGPATH_W) '$(srcdir)/launchwindow.cpp'; fi`

simbuild-affmodel.o: affmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-affmodel.o -MD -MP -MF $(DEPDIR)/simbuild-affmodel.Tpo -c -o simbuild-affmodel.o `test -f 'affmodel.cpp' || echo '$(srcdir)/'`affmodel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-affmodel.Tpo $(DEPDIR)/simbuild-affmodel.Po
#	$(AM_V_CXX)source='affmodel.cpp' object='simbuild-affmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-affmodel.o `test -f 'affmodel.cpp' || echo '$(srcdir)/'`affmodel.cpp

simbuild-affmodel.obj: affmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-affmodel.obj -MD -MP -MF $(DEPDIR)/simbuild-affmodel.Tpo -c -o simbuild-affmodel.obj `if test -f 'affmodel.cpp'; then $(CYGPATH_W) 'affmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/affmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-affmodel.Tpo $(DEPDIR)/simbuild-affmodel.Po
#	$(AM_V_CXX)source='affmodel.cpp' object='simbuild-affmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-affmodel.obj `if test -f 'affmodel.cpp'; then $(CYGPATH_W) 'affmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/affmodel.cpp'; fi`

simbuild-launch_impl.o: launch_impl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-launch_impl.o -MD -MP -MF $(DEPDIR)/simbuild-launch_impl.Tpo -c -o simbuild-launch_impl.o `test -f 'launch_impl.cpp' || echo '$(srcdir)/'`launch_impl.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-launch_impl.Tpo $(DEPDIR)/simbuild-launch_impl.Po
#	$(AM_V_CXX)source='launch_impl.cpp' object='simbuild-launch_impl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-launch_impl.o `test -f 'launch_impl.cpp' || echo '$(srcdir)/'`launch_impl.cpp

simbuild-launch_impl.obj: launch_impl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-launch_impl.obj -MD -MP -MF $(DEPDIR)/simbuild-launch_impl.Tpo -c -o simbuild-launch_impl.obj `if test -f 'launch_impl.cpp'; then $(CYGPATH_W) 'launch_impl.cpp'; else $(CYGPATH_W) '$(srcdir)/launch_impl.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-launch_impl.Tpo $(DEPDIR)/simbuild-launch_impl.Po
#	$(AM_V_CXX)source='launch_impl.cpp' object='simbuild-launch_impl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-launch_impl.obj `if test -f 'launch_impl.cpp'; then $(CYGPATH_W) 'launch_impl.cpp'; else $(CYGPATH_W) '$(srcdir)/launch_impl.cpp'; fi`

simbuild-launch_model.o: launch_model.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-launch_model.o -MD -MP -MF $(DEPDIR)/simbuild-launch_model.Tpo -c -o simbuild-launch_model.o `test -f 'launch_model.cpp' || echo '$(srcdir)/'`launch_model.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-launch_model.Tpo $(DEPDIR)/simbuild-launch_model.Po
#	$(AM_V_CXX)source='launch_model.cpp' object='simbuild-launch_model.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-launch_model.o `test -f 'launch_model.cpp' || echo '$(srcdir)/'`launch_model.cpp

simbuild-launch_model.obj: launch_model.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-launch_model.obj -MD -MP -MF $(DEPDIR)/simbuild-launch_model.Tpo -c -o simbuild-launch_model.obj `if test -f 'launch_model.cpp'; then $(CYGPATH_W) 'launch_model.cpp'; else $(CYGPATH_W) '$(srcdir)/launch_model.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-launch_model.Tpo $(DEPDIR)/simbuild-launch_model.Po
#	$(AM_V_CXX)source='launch_model.cpp' object='simbuild-launch_model.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-launch_model.obj `if test -f 'launch_model.cpp'; then $(CYGPATH_W) 'launch_model.cpp'; else $(CYGPATH_W) '$(srcdir)/launch_model.cpp'; fi`

simbuild-colormap.o: colormap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-colormap.o -MD -MP -MF $(DEPDIR)/simbuild-colormap.Tpo -c -o simbuild-colormap.o `test -f 'colormap.cpp' || echo '$(srcdir)/'`colormap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-colormap.Tpo $(DEPDIR)/simbuild-colormap.Po
#	$(AM_V_CXX)source='colormap.cpp' object='simbuild-colormap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-colormap.o `test -f 'colormap.cpp' || echo '$(srcdir)/'`colormap.cpp

simbuild-colormap.obj: colormap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-colormap.obj -MD -MP -MF $(DEPDIR)/simbuild-colormap.Tpo -c -o simbuild-colormap.obj `if test -f 'colormap.cpp'; then $(CYGPATH_W) 'colormap.cpp'; else $(CYGPATH_W) '$(srcdir)/colormap.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-colormap.Tpo $(DEPDIR)/simbuild-colormap.Po
#	$(AM_V_CXX)source='colormap.cpp' object='simbuild-colormap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-colormap.obj `if test -f 'colormap.cpp'; then $(CYGPATH_W) 'colormap.cpp'; else $(CYGPATH_W) '$(srcdir)/colormap.cpp'; fi`

simbuild-helpbox.o: helpbox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-helpbox.o -MD -MP -MF $(DEPDIR)/simbuild-helpbox.Tpo -c -o simbuild-helpbox.o `test -f 'helpbox.cpp' || echo '$(srcdir)/'`helpbox.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-helpbox.Tpo $(DEPDIR)/simbuild-helpbox.Po
#	$(AM_V_CXX)source='helpbox.cpp' object='simbuild-helpbox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-helpbox.o `test -f 'helpbox.cpp' || echo '$(srcdir)/'`helpbox.cpp

simbuild-helpbox.obj: helpbox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-helpbox.obj -MD -MP -MF $(DEPDIR)/simbuild-helpbox.Tpo -c -o simbuild-helpbox.obj `if test -f 'helpbox.cpp'; then $(CYGPATH_W) 'helpbox.cpp'; else $(CYGPATH_W) '$(srcdir)/helpbox.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-helpbox.Tpo $(DEPDIR)/simbuild-helpbox.Po
#	$(AM_V_CXX)source='helpbox.cpp' object='simbuild-helpbox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-helpbox.obj `if test -f 'helpbox.cpp'; then $(CYGPATH_W) 'helpbox.cpp'; else $(CYGPATH_W) '$(srcdir)/helpbox.cpp'; fi`

simbuild-simnodes.o: simnodes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-simnodes.o -MD -MP -MF $(DEPDIR)/simbuild-simnodes.Tpo -c -o simbuild-simnodes.o `test -f 'simnodes.cpp' || echo '$(srcdir)/'`simnodes.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-simnodes.Tpo $(DEPDIR)/simbuild-simnodes.Po
#	$(AM_V_CXX)source='simnodes.cpp' object='simbuild-simnodes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-simnodes.o `test -f 'simnodes.cpp' || echo '$(srcdir)/'`simnodes.cpp

simbuild-simnodes.obj: simnodes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-simnodes.obj -MD -MP -MF $(DEPDIR)/simbuild-simnodes.Tpo -c -o simbuild-simnodes.obj `if test -f 'simnodes.cpp'; then $(CYGPATH_W) 'simnodes.cpp'; else $(CYGPATH_W) '$(srcdir)/simnodes.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-simnodes.Tpo $(DEPDIR)/simbuild-simnodes.Po
#	$(AM_V_CXX)source='simnodes.cpp' object='simbuild-simnodes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-simnodes.obj `if test -f 'simnodes.cpp'; then $(CYGPATH_W) 'simnodes.cpp'; else $(CYGPATH_W) '$(srcdir)/simnodes.cpp'; fi`

simbuild-selectaxonsyn.o: selectaxonsyn.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-selectaxonsyn.o -MD -MP -MF $(DEPDIR)/simbuild-selectaxonsyn.Tpo -c -o simbuild-selectaxonsyn.o `test -f 'selectaxonsyn.cpp' || echo '$(srcdir)/'`selectaxonsyn.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-selectaxonsyn.Tpo $(DEPDIR)/simbuild-selectaxonsyn.Po
#	$(AM_V_CXX)source='selectaxonsyn.cpp' object='simbuild-selectaxonsyn.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-selectaxonsyn.o `test -f 'selectaxonsyn.cpp' || echo '$(srcdir)/'`selectaxonsyn.cpp

simbuild-selectaxonsyn.obj: selectaxonsyn.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-selectaxonsyn.obj -MD -MP -MF $(DEPDIR)/simbuild-selectaxonsyn.Tpo -c -o simbuild-selectaxonsyn.obj `if test -f 'selectaxonsyn.cpp'; then $(CYGPATH_W) 'selectaxonsyn.cpp'; else $(CYGPATH_W) '$(srcdir)/selectaxonsyn.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-selectaxonsyn.Tpo $(DEPDIR)/simbuild-selectaxonsyn.Po
#	$(AM_V_CXX)source='selectaxonsyn.cpp' object='simbuild-selectaxonsyn.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-selectaxonsyn.obj `if test -f 'selectaxonsyn.cpp'; then $(CYGPATH_W) 'selectaxonsyn.cpp'; else $(CYGPATH_W) '$(srcdir)/selectaxonsyn.cpp'; fi`

simbuild-sim_proc.o: sim_proc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-sim_proc.o -MD -MP -MF $(DEPDIR)/simbuild-sim_proc.Tpo -c -o simbuild-sim_proc.o `test -f 'sim_proc.cpp' || echo '$(srcdir)/'`sim_proc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-sim_proc.Tpo $(DEPDIR)/simbuild-sim_proc.Po
#	$(AM_V_CXX)source='sim_proc.cpp' object='simbuild-sim_proc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-sim_proc.o `test -f 'sim_proc.cpp' || echo '$(srcdir)/'`sim_proc.cpp

simbuild-sim_proc.obj: sim_proc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-sim_proc.obj -MD -MP -MF $(DEPDIR)/simbuild-sim_proc.Tpo -c -o simbuild-sim_proc.obj `if test -f 'sim_proc.cpp'; then $(CYGPATH_W) 'sim_proc.cpp'; else $(CYGPATH_W) '$(srcdir)/sim_proc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-sim_proc.Tpo $(DEPDIR)/simbuild-sim_proc.Po
#	$(AM_V_CXX)source='sim_proc.cpp' object='simbuild-sim_proc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-sim_proc.obj `if test -f 'sim_proc.cpp'; then $(CYGPATH_W) 'sim_proc.cpp'; else $(CYGPATH_W) '$(srcdir)/sim_proc.cpp'; fi`

simbuild-build_model.o: build_model.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-build_model.o -MD -MP -MF $(DEPDIR)/simbuild-build_model.Tpo -c -o simbuild-build_model.o `test -f 'build_model.cpp' || echo '$(srcdir)/'`build_model.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-build_model.Tpo $(DEPDIR)/simbuild-build_model.Po
#	$(AM_V_CXX)source='build_model.cpp' object='simbuild-build_model.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-build_model.o `test -f 'build_model.cpp' || echo '$(srcdir)/'`build_model.cpp

simbuild-build_model.obj: build_model.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-build_model.obj -MD -MP -MF $(DEPDIR)/simbuild-build_model.Tpo -c -o simbuild-build_model.obj `if test -f 'build_model.cpp'; then $(CYGPATH_W) 'build_model.cpp'; else $(CYGPATH_W) '$(srcdir)/build_model.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-build_model.Tpo $(DEPDIR)/simbuild-build_model.Po
#	$(AM_V_CXX)source='build_model.cpp' object='simbuild-build_model.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-build_model.obj `if test -f 'build_model.cpp'; then $(CYGPATH_W) 'build_model.cpp'; else $(CYGPATH_W) '$(srcdir)/build_model.cpp'; fi`

simbuild-synview.o: synview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-synview.o -MD -MP -MF $(DEPDIR)/simbuild-synview.Tpo -c -o simbuild-synview.o `test -f 'synview.cpp' || echo '$(srcdir)/'`synview.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-synview.Tpo $(DEPDIR)/simbuild-synview.Po
#	$(AM_V_CXX)source='synview.cpp' object='simbuild-synview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-synview.o `test -f 'synview.cpp' || echo '$(srcdir)/'`synview.cpp

simbuild-synview.obj: synview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-synview.obj -MD -MP -MF $(DEPDIR)/simbuild-synview.Tpo -c -o simbuild-synview.obj `if test -f 'synview.cpp'; then $(CYGPATH_W) 'synview.cpp'; else $(CYGPATH_W) '$(srcdir)/synview.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-synview.Tpo $(DEPDIR)/simbuild-synview.Po
#	$(AM_V_CXX)source='synview.cpp' object='simbuild-synview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-synview.obj `if test -f 'synview.cpp'; then $(CYGPATH_W) 'synview.cpp'; else $(CYGPATH_W) '$(srcdir)/synview.cpp'; fi`

simbuild-chglog.o: chglog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-chglog.o -MD -MP -MF $(DEPDIR)/simbuild-chglog.Tpo -c -o simbuild-chglog.o `test -f 'chglog.cpp' || echo '$(srcdir)/'`chglog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-chglog.Tpo $(DEPDIR)/simbuild-chglog.Po
#	$(AM_V_CXX)source='chglog.cpp' object='simbuild-chglog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-chglog.o `test -f 'chglog.cpp' || echo '$(srcdir)/'`chglog.cpp

simbuild-chglog.obj: chglog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-chglog.obj -MD -MP -MF $(DEPDIR)/simbuild-chglog.Tpo -c -o simbuild-chglog.obj `if test -f 'chglog.cpp'; then $(CYGPATH_W) 'chglog.cpp'; else $(CYGPATH_W) '$(srcdir)/chglog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-chglog.Tpo $(DEPDIR)/simbuild-chglog.Po
#	$(AM_V_CXX)source='chglog.cpp' object='simbuild-chglog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-chglog.obj `if test -f 'chglog.cpp'; then $(CYGPATH_W) 'chglog.cpp'; else $(CYGPATH_W) '$(srcdir)/chglog.cpp'; fi`

simbuild-finddialog.o: finddialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-finddialog.o -MD -MP -MF $(DEPDIR)/simbuild-finddialog.Tpo -c -o simbuild-finddialog.o `test -f 'finddialog.cpp' || echo '$(srcdir)/'`finddialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-finddialog.Tpo $(DEPDIR)/simbuild-finddialog.Po
#	$(AM_V_CXX)source='finddialog.cpp' object='simbuild-finddialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-finddialog.o `test -f 'finddialog.cpp' || echo '$(srcdir)/'`finddialog.cpp

simbuild-finddialog.obj: finddialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-finddialog.obj -MD -MP -MF $(DEPDIR)/simbuild-finddialog.Tpo -c -o simbuild-finddialog.obj `if test -f 'finddialog.cpp'; then $(CYGPATH_W) 'finddialog.cpp'; else $(CYGPATH_W) '$(srcdir)/finddialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-finddialog.Tpo $(DEPDIR)/simbuild-finddialog.Po
#	$(AM_V_CXX)source='finddialog.cpp' object='simbuild-finddialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-finddialog.obj `if test -f 'finddialog.cpp'; then $(CYGPATH_W) 'finddialog.cpp'; else $(CYGPATH_W) '$(srcdir)/finddialog.cpp'; fi`

simbuild-slope_spin.o: slope_spin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-slope_spin.o -MD -MP -MF $(DEPDIR)/simbuild-slope_spin.Tpo -c -o simbuild-slope_spin.o `test -f 'slope_spin.cpp' || echo '$(srcdir)/'`slope_spin.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-slope_spin.Tpo $(DEPDIR)/simbuild-slope_spin.Po
#	$(AM_V_CXX)source='slope_spin.cpp' object='simbuild-slope_spin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-slope_spin.o `test -f 'slope_spin.cpp' || echo '$(srcdir)/'`slope_spin.cpp

simbuild-slope_spin.obj: slope_spin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -MT simbuild-slope_spin.obj -MD -MP -MF $(DEPDIR)/simbuild-slope_spin.Tpo -c -o simbuild-slope_spin.obj `if test -f 'slope_spin.cpp'; then $(CYGPATH_W) 'slope_spin.cpp'; else $(CYGPATH_W) '$(srcdir)/slope_spin.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simbuild-slope_spin.Tpo $(DEPDIR)/simbuild-slope_spin.Po
#	$(AM_V_CXX)source='slope_spin.cpp' object='simbuild-slope_spin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simbuild_CXXFLAGS) $(CXXFLAGS) -c -o simbuild-slope_spin.obj `if test -f 'slope_spin.cpp'; then $(CYGPATH_W) 'slope_spin.cpp'; else $(CYGPATH_W) '$(srcdir)/slope_spin.cpp'; fi`

simrun-expr.o: expr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simrun_CXXFLAGS) $(CXXFLAGS) -MT simrun-expr.o -MD -MP -MF $(DEPDIR)/simrun-expr.Tpo -c -o simrun-expr.o `test -f 'expr.cpp' || echo '$(srcdir)/'`expr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simrun-expr.Tpo $(DEPDIR)/simrun-expr.Po
#	$(AM_V_CXX)source='expr.cpp' object='simrun-expr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simrun_CXXFLAGS) $(CXXFLAGS) -c -o simrun-expr.o `test -f 'expr.cpp' || echo '$(srcdir)/'`expr.cpp

simrun-expr.obj: expr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simrun_CXXFLAGS) $(CXXFLAGS) -MT simrun-expr.obj -MD -MP -MF $(DEPDIR)/simrun-expr.Tpo -c -o simrun-expr.obj `if test -f 'expr.cpp'; then $(CYGPATH_W) 'expr.cpp'; else $(CYGPATH_W) '$(srcdir)/expr.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simrun-expr.Tpo $(DEPDIR)/simrun-expr.Po
#	$(AM_V_CXX)source='expr.cpp' object='simrun-expr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simrun_CXXFLAGS) $(CXXFLAGS) -c -o simrun-expr.obj `if test -f 'expr.cpp'; then $(CYGPATH_W) 'expr.cpp'; else $(CYGPATH_W) '$(srcdir)/expr.cpp'; fi`

simrun-simrun_wrap.o: simrun_wrap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simrun_CXXFLAGS) $(CXXFLAGS) -MT simrun-simrun_wrap.o -MD -MP -MF $(DEPDIR)/simrun-simrun_wrap.Tpo -c -o simrun-simrun_wrap.o `test -f 'simrun_wrap.cpp' || echo '$(srcdir)/'`simrun_wrap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simrun-simrun_wrap.Tpo $(DEPDIR)/simrun-simrun_wrap.Po
#	$(AM_V_CXX)source='simrun_wrap.cpp' object='simrun-simrun_wrap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simrun_CXXFLAGS) $(CXXFLAGS) -c -o simrun-simrun_wrap.o `test -f 'simrun_wrap.cpp' || echo '$(srcdir)/'`simrun_wrap.cpp

simrun-simrun_wrap.obj: simrun_wrap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simrun_CXXFLAGS) $(CXXFLAGS) -MT simrun-simrun_wrap.obj -MD -MP -MF $(DEPDIR)/simrun-simrun_wrap.Tpo -c -o simrun-simrun_wrap.obj `if test -f 'simrun_wrap.cpp'; then $(CYGPATH_W) 'simrun_wrap.cpp'; else $(CYGPATH_W) '$(srcdir)/simrun_wrap.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simrun-simrun_wrap.Tpo $(DEPDIR)/simrun-simrun_wrap.Po
#	$(AM_V_CXX)source='simrun_wrap.cpp' object='simrun-simrun_wrap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simrun_CXXFLAGS) $(CXXFLAGS) -c -o simrun-simrun_wrap.obj `if test -f 'simrun_wrap.cpp'; then $(CYGPATH_W) 'simrun_wrap.cpp'; else $(CYGPATH_W) '$(srcdir)/simrun_wrap.cpp'; fi`

simrun-add_IandE.o: add_IandE.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simrun_CXXFLAGS) $(CXXFLAGS) -MT simrun-add_IandE.o -MD -MP -MF $(DEPDIR)/simrun-add_IandE.Tpo -c -o simrun-add_IandE.o `test -f 'add_IandE.cpp' || echo '$(srcdir)/'`add_IandE.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simrun-add_IandE.Tpo $(DEPDIR)/simrun-add_IandE.Po
#	$(AM_V_CXX)source='add_IandE.cpp' object='simrun-add_IandE.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simrun_CXXFLAGS) $(CXXFLAGS) -c -o simrun-add_IandE.o `test -f 'add_IandE.cpp' || echo '$(srcdir)/'`add_IandE.cpp

simrun-add_IandE.obj: add_IandE.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simrun_CXXFLAGS) $(CXXFLAGS) -MT simrun-add_IandE.obj -MD -MP -MF $(DEPDIR)/simrun-add_IandE.Tpo -c -o simrun-add_IandE.obj `if test -f 'add_IandE.cpp'; then $(CYGPATH_W) 'add_IandE.cpp'; else $(CYGPATH_W) '$(srcdir)/add_IandE.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simrun-add_IandE.Tpo $(DEPDIR)/simrun-add_IandE.Po
#	$(AM_V_CXX)source='add_IandE.cpp' object='simrun-add_IandE.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simrun_CXXFLAGS) $(CXXFLAGS) -c -o simrun-add_IandE.obj `if test -f 'add_IandE.cpp'; then $(CYGPATH_W) 'add_IandE.cpp'; else $(CYGPATH_W) '$(srcdir)/add_IandE.cpp'; fi`

simviewer-moc_simviewer.o: moc_simviewer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -MT simviewer-moc_simviewer.o -MD -MP -MF $(DEPDIR)/simviewer-moc_simviewer.Tpo -c -o simviewer-moc_simviewer.o `test -f 'moc_simviewer.cpp' || echo '$(srcdir)/'`moc_simviewer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simviewer-moc_simviewer.Tpo $(DEPDIR)/simviewer-moc_simviewer.Po
#	$(AM_V_CXX)source='moc_simviewer.cpp' object='simviewer-moc_simviewer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -c -o simviewer-moc_simviewer.o `test -f 'moc_simviewer.cpp' || echo '$(srcdir)/'`moc_simviewer.cpp

simviewer-moc_simviewer.obj: moc_simviewer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -MT simviewer-moc_simviewer.obj -MD -MP -MF $(DEPDIR)/simviewer-moc_simviewer.Tpo -c -o simviewer-moc_simviewer.obj `if test -f 'moc_simviewer.cpp'; then $(CYGPATH_W) 'moc_simviewer.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_simviewer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simviewer-moc_simviewer.Tpo $(DEPDIR)/simviewer-moc_simviewer.Po
#	$(AM_V_CXX)source='moc_simviewer.cpp' object='simviewer-moc_simviewer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -c -o simviewer-moc_simviewer.obj `if test -f 'moc_simviewer.cpp'; then $(CYGPATH_W) 'moc_simviewer.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_simviewer.cpp'; fi`

simviewer-qrc_simviewer.o: qrc_simviewer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -MT simviewer-qrc_simviewer.o -MD -MP -MF $(DEPDIR)/simviewer-qrc_simviewer.Tpo -c -o simviewer-qrc_simviewer.o `test -f 'qrc_simviewer.cpp' || echo '$(srcdir)/'`qrc_simviewer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simviewer-qrc_simviewer.Tpo $(DEPDIR)/simviewer-qrc_simviewer.Po
#	$(AM_V_CXX)source='qrc_simviewer.cpp' object='simviewer-qrc_simviewer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -c -o simviewer-qrc_simviewer.o `test -f 'qrc_simviewer.cpp' || echo '$(srcdir)/'`qrc_simviewer.cpp

simviewer-qrc_simviewer.obj: qrc_simviewer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -MT simviewer-qrc_simviewer.obj -MD -MP -MF $(DEPDIR)/simviewer-qrc_simviewer.Tpo -c -o simviewer-qrc_simviewer.obj `if test -f 'qrc_simviewer.cpp'; then $(CYGPATH_W) 'qrc_simviewer.cpp'; else $(CYGPATH_W) '$(srcdir)/qrc_simviewer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simviewer-qrc_simviewer.Tpo $(DEPDIR)/simviewer-qrc_simviewer.Po
#	$(AM_V_CXX)source='qrc_simviewer.cpp' object='simviewer-qrc_simviewer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -c -o simviewer-qrc_simviewer.obj `if test -f 'qrc_simviewer.cpp'; then $(CYGPATH_W) 'qrc_simviewer.cpp'; else $(CYGPATH_W) '$(srcdir)/qrc_simviewer.cpp'; fi`

simviewer-simviewer.o: simviewer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -MT simviewer-simviewer.o -MD -MP -MF $(DEPDIR)/simviewer-simviewer.Tpo -c -o simviewer-simviewer.o `test -f 'simviewer.cpp' || echo '$(srcdir)/'`simviewer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simviewer-simviewer.Tpo $(DEPDIR)/simviewer-simviewer.Po
#	$(AM_V_CXX)source='simviewer.cpp' object='simviewer-simviewer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -c -o simviewer-simviewer.o `test -f 'simviewer.cpp' || echo '$(srcdir)/'`simviewer.cpp

simviewer-simviewer.obj: simviewer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -MT simviewer-simviewer.obj -MD -MP -MF $(DEPDIR)/simviewer-simviewer.Tpo -c -o simviewer-simviewer.obj `if test -f 'simviewer.cpp'; then $(CYGPATH_W) 'simviewer.cpp'; else $(CYGPATH_W) '$(srcdir)/simviewer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simviewer-simviewer.Tpo $(DEPDIR)/simviewer-simviewer.Po
#	$(AM_V_CXX)source='simviewer.cpp' object='simviewer-simviewer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -c -o simviewer-simviewer.obj `if test -f 'simviewer.cpp'; then $(CYGPATH_W) 'simviewer.cpp'; else $(CYGPATH_W) '$(srcdir)/simviewer.cpp'; fi`

simviewer-simviewer_impl.o: simviewer_impl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -MT simviewer-simviewer_impl.o -MD -MP -MF $(DEPDIR)/simviewer-simviewer_impl.Tpo -c -o simviewer-simviewer_impl.o `test -f 'simviewer_impl.cpp' || echo '$(srcdir)/'`simviewer_impl.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simviewer-simviewer_impl.Tpo $(DEPDIR)/simviewer-simviewer_impl.Po
#	$(AM_V_CXX)source='simviewer_impl.cpp' object='simviewer-simviewer_impl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -c -o simviewer-simviewer_impl.o `test -f 'simviewer_impl.cpp' || echo '$(srcdir)/'`simviewer_impl.cpp

simviewer-simviewer_impl.obj: simviewer_impl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -MT simviewer-simviewer_impl.obj -MD -MP -MF $(DEPDIR)/simviewer-simviewer_impl.Tpo -c -o simviewer-simviewer_impl.obj `if test -f 'simviewer_impl.cpp'; then $(CYGPATH_W) 'simviewer_impl.cpp'; else $(CYGPATH_W) '$(srcdir)/simviewer_impl.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simviewer-simviewer_impl.Tpo $(DEPDIR)/simviewer-simviewer_impl.Po
#	$(AM_V_CXX)source='simviewer_impl.cpp' object='simviewer-simviewer_impl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -c -o simviewer-simviewer_impl.obj `if test -f 'simviewer_impl.cpp'; then $(CYGPATH_W) 'simviewer_impl.cpp'; else $(CYGPATH_W) '$(srcdir)/simviewer_impl.cpp'; fi`

simviewer-simviewermain.o: simviewermain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -MT simviewer-simviewermain.o -MD -MP -MF $(DEPDIR)/simviewer-simviewermain.Tpo -c -o simviewer-simviewermain.o `test -f 'simviewermain.cpp' || echo '$(srcdir)/'`simviewermain.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simviewer-simviewermain.Tpo $(DEPDIR)/simviewer-simviewermain.Po
#	$(AM_V_CXX)source='simviewermain.cpp' object='simviewer-simviewermain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -c -o simviewer-simviewermain.o `test -f 'simviewermain.cpp' || echo '$(srcdir)/'`simviewermain.cpp

simviewer-simviewermain.obj: simviewermain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -MT simviewer-simviewermain.obj -MD -MP -MF $(DEPDIR)/simviewer-simviewermain.Tpo -c -o simviewer-simviewermain.obj `if test -f 'simviewermain.cpp'; then $(CYGPATH_W) 'simviewermain.cpp'; else $(CYGPATH_W) '$(srcdir)/simviewermain.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simviewer-simviewermain.Tpo $(DEPDIR)/simviewer-simviewermain.Po
#	$(AM_V_CXX)source='simviewermain.cpp' object='simviewer-simviewermain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(simviewer_CXXFLAGS) $(CXXFLAGS) -c -o simviewer-simviewermain.obj `if test -f 'simviewermain.cpp'; then $(CYGPATH_W) 'simviewermain.cpp'; else $(CYGPATH_W) '$(srcdir)/simviewermain.cpp'; fi`

wave2daq-wave2daq.o: wave2daq.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wave2daq_CXXFLAGS) $(CXXFLAGS) -MT wave2daq-wave2daq.o -MD -MP -MF $(DEPDIR)/wave2daq-wave2daq.Tpo -c -o wave2daq-wave2daq.o `test -f 'wave2daq.cpp' || echo '$(srcdir)/'`wave2daq.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/wave2daq-wave2daq.Tpo $(DEPDIR)/wave2daq-wave2daq.Po
#	$(AM_V_CXX)source='wave2daq.cpp' object='wave2daq-wave2daq.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wave2daq_CXXFLAGS) $(CXXFLAGS) -c -o wave2daq-wave2daq.o `test -f 'wave2daq.cpp' || echo '$(srcdir)/'`wave2daq.cpp

wave2daq-wave2daq.obj: wave2daq.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wave2daq_CXXFLAGS) $(CXXFLAGS) -MT wave2daq-wave2daq.obj -MD -MP -MF $(DEPDIR)/wave2daq-wave2daq.Tpo -c -o wave2daq-wave2daq.obj `if test -f 'wave2daq.cpp'; then $(CYGPATH_W) 'wave2daq.cpp'; else $(CYGPATH_W) '$(srcdir)/wave2daq.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/wave2daq-wave2daq.Tpo $(DEPDIR)/wave2daq-wave2daq.Po
#	$(AM_V_CXX)source='wave2daq.cpp' object='wave2daq-wave2daq.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wave2daq_CXXFLAGS) $(CXXFLAGS) -c -o wave2daq-wave2daq.obj `if test -f 'wave2daq.cpp'; then $(CYGPATH_W) 'wave2daq.cpp'; else $(CYGPATH_W) '$(srcdir)/wave2daq.cpp'; fi`
install-dist_docDATA: $(dist_doc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(docdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(docdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-dist_docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(docdir)'; $(am__uninstall_files_from_dir)
install-dist_pkgdataDATA: $(dist_pkgdata_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdatadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdatadir)" || exit $$?; \
	done

uninstall-dist_pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgdatadir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-zstd: distdir
	tardir=$(distdir) && $(am__tar) | zstd -c $${ZSTD_CLEVEL-$${ZSTD_OPT--19}} >$(distdir).tar.zst
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	*.tar.zst*) \
	  zstd -dc $(distdir).tar.zst | $(am__untar) ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) $(AM_DISTCHECK_DVI_TARGET) \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(pkgdatadir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
		-rm -f ./$(DEPDIR)/add_IandE.Po
	-rm -f ./$(DEPDIR)/affmodel.Po
	-rm -f ./$(DEPDIR)/build_hash.Po
	-rm -f ./$(DEPDIR)/build_model.Po
	-rm -f ./$(DEPDIR)/build_network.Po
	-rm -f ./$(DEPDIR)/c_globals.Po
	-rm -f ./$(DEPDIR)/chglog.Po
	-rm -f ./$(DEPDIR)/colormap.Po
	-rm -f ./$(DEPDIR)/edt2spike2-edt2spike2.Po
	-rm -f ./$(DEPDIR)/edt2spike2.Po
	-rm -f ./$(DEPDIR)/expr.Po
	-rm -f ./$(DEPDIR)/fileio.Po
	-rm -f ./$(DEPDIR)/finddialog.Po
	-rm -f ./$(DEPDIR)/helpbox.Po
	-rm -f ./$(DEPDIR)/launch_impl.Po
	-rm -f ./$(DEPDIR)/launch_model.Po
	-rm -f ./$(DEPDIR)/launchwindow.Po
	-rm -f ./$(DEPDIR)/lin2ms.Po
	-rm -f ./$(DEPDIR)/lung.Po
	-rm -f ./$(DEPDIR)/makesine-makesine.Po
	-rm -f ./$(DEPDIR)/makesine.Po
	-rm -f ./$(DEPDIR)/moc_affmodel.Po
	-rm -f ./$(DEPDIR)/moc_build_model.Po
	-rm -f ./$(DEPDIR)/moc_finddialog.Po
	-rm -f ./$(DEPDIR)/moc_helpbox.Po
	-rm -f ./$(DEPDIR)/moc_launch_model.Po
	-rm -f ./$(DEPDIR)/moc_launchwindow.Po
	-rm -f ./$(DEPDIR)/moc_selectaxonsyn.Po
	-rm -f ./$(DEPDIR)/moc_sim_proc.Po
	-rm -f ./$(DEPDIR)/moc_simmsg.Po
	-rm -f ./$(DEPDIR)/moc_simscene.Po
	-rm -f ./$(DEPDIR)/moc_simview.Po
	-rm -f ./$(DEPDIR)/moc_simviewer.Po
	-rm -f ./$(DEPDIR)/moc_simwin.Po
	-rm -f ./$(DEPDIR)/moc_slope_spin.Po
	-rm -f ./$(DEPDIR)/moc_synview.Po
	-rm -f ./$(DEPDIR)/node_mgr.Po
	-rm -f ./$(DEPDIR)/qrc_simbuild.Po
	-rm -f ./$(DEPDIR)/qrc_simviewer.Po
	-rm -f ./$(DEPDIR)/read_sim.Po
	-rm -f ./$(DEPDIR)/rplssimc_p-rplssimc_p.Po
	-rm -f ./$(DEPDIR)/sample_cells.Po
	-rm -f ./$(DEPDIR)/selectaxonsyn.Po
	-rm -f ./$(DEPDIR)/sim.Po
	-rm -f ./$(DEPDIR)/sim2build.Po
	-rm -f ./$(DEPDIR)/sim_hash.Po
	-rm -f ./$(DEPDIR)/sim_impl.Po
	-rm -f ./$(DEPDIR)/sim_proc.Po
	-rm -f ./$(DEPDIR)/simbuild-affmodel.Po
	-rm -f ./$(DEPDIR)/simbuild-build_model.Po
	-rm -f ./$(DEPDIR)/simbuild-chglog.Po
	-rm -f ./$(DEPDIR)/simbuild-colormap.Po
	-rm -f ./$(DEPDIR)/simbuild-finddialog.Po
	-rm -f ./$(DEPDIR)/simbuild-helpbox.Po
	-rm -f ./$(DEPDIR)/simbuild-launch_impl.Po
	-rm -f ./$(DEPDIR)/simbuild-launch_model.Po
	-rm -f ./$(DEPDIR)/simbuild-launchwindow.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_affmodel.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_build_model.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_finddialog.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_helpbox.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_launch_model.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_launchwindow.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_selectaxonsyn.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_sim_proc.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_simscene.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_simview.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_simwin.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_slope_spin.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_synview.Po
	-rm -f ./$(DEPDIR)/simbuild-qrc_simbuild.Po
	-rm -f ./$(DEPDIR)/simbuild-selectaxonsyn.Po
	-rm -f ./$(DEPDIR)/simbuild-sim2build.Po
	-rm -f ./$(DEPDIR)/simbuild-sim_impl.Po
	-rm -f ./$(DEPDIR)/simbuild-sim_proc.Po
	-rm -f ./$(DEPDIR)/simbuild-simmain.Po
	-rm -f ./$(DEPDIR)/simbuild-simnodes.Po
	-rm -f ./$(DEPDIR)/simbuild-simscene.Po
	-rm -f ./$(DEPDIR)/simbuild-simscene_draw.Po
	-rm -f ./$(DEPDIR)/simbuild-simscene_export.Po
	-rm -f ./$(DEPDIR)/simbuild-simview.Po
	-rm -f ./$(DEPDIR)/simbuild-simwin.Po
	-rm -f ./$(DEPDIR)/simbuild-slope_spin.Po
	-rm -f ./$(DEPDIR)/simbuild-synview.Po
	-rm -f ./$(DEPDIR)/simloop.Po
	-rm -f ./$(DEPDIR)/simmain.Po
	-rm -f ./$(DEPDIR)/simmerge.Po
	-rm -f ./$(DEPDIR)/simmsg.Po
	-rm -f ./$(DEPDIR)/simnodes.Po
	-rm -f ./$(DEPDIR)/simpickedt.Po
	-rm -f ./$(DEPDIR)/simpickwave.Po
	-rm -f ./$(DEPDIR)/simrun-add_IandE.Po
	-rm -f ./$(DEPDIR)/simrun-expr.Po
	-rm -f ./$(DEPDIR)/simrun-simrun_wrap.Po
	-rm -f ./$(DEPDIR)/simrun_wrap.Po
	-rm -f ./$(DEPDIR)/simscene.Po
	-rm -f ./$(DEPDIR)/simscene_draw.Po
	-rm -f ./$(DEPDIR)/simscene_export.Po
	-rm -f ./$(DEPDIR)/simspectrum.Po
	-rm -f ./$(DEPDIR)/simtxt2flt.Po
	-rm -f ./$(DEPDIR)/simview.Po
	-rm -f ./$(DEPDIR)/simviewer-moc_simviewer.Po
	-rm -f ./$(DEPDIR)/simviewer-qrc_simviewer.Po
	-rm -f ./$(DEPDIR)/simviewer-simviewer.Po
	-rm -f ./$(DEPDIR)/simviewer-simviewer_impl.Po
	-rm -f ./$(DEPDIR)/simviewer-simviewermain.Po
	-rm -f ./$(DEPDIR)/simviewer.Po
	-rm -f ./$(DEPDIR)/simviewer_impl.Po
	-rm -f ./$(DEPDIR)/simviewermain.Po
	-rm -f ./$(DEPDIR)/simwin.Po
	-rm -f ./$(DEPDIR)/slope_spin.Po
	-rm -f ./$(DEPDIR)/swap.Po
	-rm -f ./$(DEPDIR)/synview.Po
	-rm -f ./$(DEPDIR)/update.Po
	-rm -f ./$(DEPDIR)/util.Po
	-rm -f ./$(DEPDIR)/wave2daq-wave2daq.Po
	-rm -f ./$(DEPDIR)/wave2daq.Po
	-rm -f ./$(DEPDIR)/wavemarkers.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dist_docDATA install-dist_pkgdataDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
		-rm -f ./$(DEPDIR)/add_IandE.Po
	-rm -f ./$(DEPDIR)/affmodel.Po
	-rm -f ./$(DEPDIR)/build_hash.Po
	-rm -f ./$(DEPDIR)/build_model.Po
	-rm -f ./$(DEPDIR)/build_network.Po
	-rm -f ./$(DEPDIR)/c_globals.Po
	-rm -f ./$(DEPDIR)/chglog.Po
	-rm -f ./$(DEPDIR)/colormap.Po
	-rm -f ./$(DEPDIR)/edt2spike2-edt2spike2.Po
	-rm -f ./$(DEPDIR)/edt2spike2.Po
	-rm -f ./$(DEPDIR)/expr.Po
	-rm -f ./$(DEPDIR)/fileio.Po
	-rm -f ./$(DEPDIR)/finddialog.Po
	-rm -f ./$(DEPDIR)/helpbox.Po
	-rm -f ./$(DEPDIR)/launch_impl.Po
	-rm -f ./$(DEPDIR)/launch_model.Po
	-rm -f ./$(DEPDIR)/launchwindow.Po
	-rm -f ./$(DEPDIR)/lin2ms.Po
	-rm -f ./$(DEPDIR)/lung.Po
	-rm -f ./$(DEPDIR)/makesine-makesine.Po
	-rm -f ./$(DEPDIR)/makesine.Po
	-rm -f ./$(DEPDIR)/moc_affmodel.Po
	-rm -f ./$(DEPDIR)/moc_build_model.Po
	-rm -f ./$(DEPDIR)/moc_finddialog.Po
	-rm -f ./$(DEPDIR)/moc_helpbox.Po
	-rm -f ./$(DEPDIR)/moc_launch_model.Po
	-rm -f ./$(DEPDIR)/moc_launchwindow.Po
	-rm -f ./$(DEPDIR)/moc_selectaxonsyn.Po
	-rm -f ./$(DEPDIR)/moc_sim_proc.Po
	-rm -f ./$(DEPDIR)/moc_simmsg.Po
	-rm -f ./$(DEPDIR)/moc_simscene.Po
	-rm -f ./$(DEPDIR)/moc_simview.Po
	-rm -f ./$(DEPDIR)/moc_simviewer.Po
	-rm -f ./$(DEPDIR)/moc_simwin.Po
	-rm -f ./$(DEPDIR)/moc_slope_spin.Po
	-rm -f ./$(DEPDIR)/moc_synview.Po
	-rm -f ./$(DEPDIR)/node_mgr.Po
	-rm -f ./$(DEPDIR)/qrc_simbuild.Po
	-rm -f ./$(DEPDIR)/qrc_simviewer.Po
	-rm -f ./$(DEPDIR)/read_sim.Po
	-rm -f ./$(DEPDIR)/rplssimc_p-rplssimc_p.Po
	-rm -f ./$(DEPDIR)/sample_cells.Po
	-rm -f ./$(DEPDIR)/selectaxonsyn.Po
	-rm -f ./$(DEPDIR)/sim.Po
	-rm -f ./$(DEPDIR)/sim2build.Po
	-rm -f ./$(DEPDIR)/sim_hash.Po
	-rm -f ./$(DEPDIR)/sim_impl.Po
	-rm -f ./$(DEPDIR)/sim_proc.Po
	-rm -f ./$(DEPDIR)/simbuild-affmodel.Po
	-rm -f ./$(DEPDIR)/simbuild-build_model.Po
	-rm -f ./$(DEPDIR)/simbuild-chglog.Po
	-rm -f ./$(DEPDIR)/simbuild-colormap.Po
	-rm -f ./$(DEPDIR)/simbuild-finddialog.Po
	-rm -f ./$(DEPDIR)/simbuild-helpbox.Po
	-rm -f ./$(DEPDIR)/simbuild-launch_impl.Po
	-rm -f ./$(DEPDIR)/simbuild-launch_model.Po
	-rm -f ./$(DEPDIR)/simbuild-launchwindow.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_affmodel.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_build_model.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_finddialog.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_helpbox.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_launch_model.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_launchwindow.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_selectaxonsyn.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_sim_proc.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_simscene.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_simview.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_simwin.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_slope_spin.Po
	-rm -f ./$(DEPDIR)/simbuild-moc_synview.Po
	-rm -f ./$(DEPDIR)/simbuild-qrc_simbuild.Po
	-rm -f ./$(DEPDIR)/simbuild-selectaxonsyn.Po
	-rm -f ./$(DEPDIR)/simbuild-sim2build.Po
	-rm -f ./$(DEPDIR)/simbuild-sim_impl.Po
	-rm -f ./$(DEPDIR)/simbuild-sim_proc.Po
	-rm -f ./$(DEPDIR)/simbuild-simmain.Po
	-rm -f ./$(DEPDIR)/simbuild-simnodes.Po
	-rm -f ./$(DEPDIR)/simbuild-simscene.Po
	-rm -f ./$(DEPDIR)/simbuild-simscene_draw.Po
	-rm -f ./$(DEPDIR)/simbuild-simscene_export.Po
	-rm -f ./$(DEPDIR)/simbuild-simview.Po
	-rm -f ./$(DEPDIR)/simbuild-simwin.Po
	-rm -f ./$(DEPDIR)/simbuild-slope_spin.Po
	-rm -f ./$(DEPDIR)/simbuild-synview.Po
	-rm -f ./$(DEPDIR)/simloop.Po
	-rm -f ./$(DEPDIR)/simmain.Po
	-rm -f ./$(DEPDIR)/simmerge.Po
	-rm -f ./$(DEPDIR)/simmsg.Po
	-rm -f ./$(DEPDIR)/simnodes.Po
	-rm -f ./$(DEPDIR)/simpickedt.Po
	-rm -f ./$(DEPDIR)/simpickwave.Po
	-rm -f ./$(DEPDIR)/simrun-add_IandE.Po
	-rm -f ./$(DEPDIR)/simrun-expr.Po
	-rm -f ./$(DEPDIR)/simrun-simrun_wrap.Po
	-rm -f ./$(DEPDIR)/simrun_wrap.Po
	-rm -f ./$(DEPDIR)/simscene.Po
	-rm -f ./$(DEPDIR)/simscene_draw.Po
	-rm -f ./$(DEPDIR)/simscene_export.Po
	-rm -f ./$(DEPDIR)/simspectrum.Po
	-rm -f ./$(DEPDIR)/simtxt2flt.Po
	-rm -f ./$(DEPDIR)/simview.Po
	-rm -f ./$(DEPDIR)/simviewer-moc_simviewer.Po
	-rm -f ./$(DEPDIR)/simviewer-qrc_simviewer.Po
	-rm -f ./$(DEPDIR)/simviewer-simviewer.Po
	-rm -f ./$(DEPDIR)/simviewer-simviewer_impl.Po
	-rm -f ./$(DEPDIR)/simviewer-simviewermain.Po
	-rm -f ./$(DEPDIR)/simviewer.Po
	-rm -f ./$(DEPDIR)/simviewer_impl.Po
	-rm -f ./$(DEPDIR)/simviewermain.Po
	-rm -f ./$(DEPDIR)/simwin.Po
	-rm -f ./$(DEPDIR)/slope_spin.Po
	-rm -f ./$(DEPDIR)/swap.Po
	-rm -f ./$(DEPDIR)/synview.Po
	-rm -f ./$(DEPDIR)/update.Po
	-rm -f ./$(DEPDIR)/util.Po
	-rm -f ./$(DEPDIR)/wave2daq-wave2daq.Po
	-rm -f ./$(DEPDIR)/wave2daq.Po
	-rm -f ./$(DEPDIR)/wavemarkers.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_binSCRIPTS \
	uninstall-dist_docDATA uninstall-dist_pkgdataDATA

.MAKE: all check install install-am install-exec install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles am--refresh check \
	check-am clean clean-binPROGRAMS clean-cscope clean-generic \
	cscope cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \
	dist-zstd distcheck distclean distclean-compile \
	distclean-generic distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dist_binSCRIPTS install-dist_docDATA \
	install-dist_pkgdataDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-dist_binSCRIPTS \
	uninstall-dist_docDATA uninstall-dist_pkgdataDATA

.PRECIOUS: Makefile


zipit:
	make usfsim_win_$(VERSION).zip

usfsim_win_$(VERSION).zip: $(WINDOWS_FILES)
	zip usfsim_win_$(VERSION).zip $(WINDOWS_FILES)

# First pass generates files, second pass uses them.
usfsim.pdf: usfsim.tex references.bib Makefile
	pdflatex usfsim
	latexmk -r latexmkrc.tex -shell-escape -gg -pdf usfsim

#	latexmk -pdf usfsim.tex
#	latexmk -gg -pdf usfsim.tex
#	latexmk -f -gg -pdf usfsim.tex

sim.pdf: sim.tex references.bib
	latexmk -f -gg -pdf sim.tex

# these build .c files with a lookup tables for structs so we can save and
# read files that are implementation independent (holes in structs, variations
# between compiler versions, etc.)
sim_hash.c: simulator.h gen_gperf.pl Makefile.am tag.pl gen_hash.sh simulator_CPPFLAGS
	./gen_hash.sh simulator.h > sim_hash.c
	test -s sim_hash.c || rm sim_hash.c

inode_hash.h: build_hash.c

build_hash.c: inode.h  gen_gperf.pl Makefile.am tag.pl gen_hash.sh
	./gen_hash.sh inode.h > build_hash.c
	test -s build_hash.c || rm build_hash.c

simfiles: $(sim_SOURCES) Makefile.am
	ls $(sim_SOURCES) > simfiles

simulator_CPPFLAGS: Makefile.am	#for use by gen_hash.sh
	echo $(sim_CPPFLAGS) > simulator_CPPFLAGS

lin: $(BUILT_SOURCES)
	make simbuild
	make simrun
	make simviewer
	make simmsg
	make edt2spike2
	make wave2daq

win: $(BUILT_SOURCES)
	make mswin
	make simrun.exe
	make simbuild.exe
	make simviewer.exe
	make simmsg.exe
	make edt2spike2.exe
	make wave2daq.exe
	make zipit

mswin:
	@mkdir -p $(MSWIN_DIR)

simrun.exe$(EXEEXT): mswin Makefile_simrun_win.qt $(simrun_SOURCES)
 ifdef MXE_QMAKE
	make -f Makefile_simrun_win.qt
 else
	@echo MXE environment not installed, windows program not built
 endif

simbuild.exe$(EXEEXT): mswin simbuild.pro Makefile_simbuild_win.qt $(simbuild_SOURCES)
 ifdef MXE_QMAKE
	make -f Makefile_simbuild_win.qt
 else
	@echo MXE environment not installed, windows program not built
 endif

simviewer.exe$(EXEEXT): mswin Makefile_simviewer_win.qt $(simviewer_SOURCES)
 ifdef MXE_QMAKE
	make -f Makefile_simviewer_win.qt
 else
	@echo MXE environment not installed, windows program not built
 endif

simmsg.exe$(EXEEXT): mswin Makefile_simmsg_win.qt $(simmsg_SOURCES)
 ifdef MXE_QMAKE
	make -f Makefile_simmsg_win.qt
 else
	@echo MXE environment not installed, windows program not built
 endif

edt2spike2.exe$(EXEEXT): mswin Makefile_edt2spike2_win.qt $(edt2spike2_exe_SOURCES)
 ifdef MXE_QMAKE
	make -f Makefile_edt2spike2_win.qt
 else
	@echo MXE environment not installed, windows program not built
 endif

Makefile_edt2spike2_win.qt: edt2spike2_win.pro
	x86_64-w64-mingw32.static-qmake-qt5 edt2spike2_win.pro -r -spec win32-g++ 'DEFINES+=VERSION=\\\"$(VERSION)\\\"'

makesine.exe$(EXEEXT): mswin Makefile_makesine_win.qt $(makesine_exe_SOURCES)
 ifdef MXE_QMAKE
	make -f Makefile_makesine_win.qt
 else
	@echo MXE environment not installed, windows program not built
 endif

Makefile_makesine_win.qt: makesine_win.pro
	x86_64-w64-mingw32.static-qmake-qt5 makesine_win.pro -r -spec win32-g++ 'DEFINES+=VERSION=\\\"$(VERSION)\\\"'

wave2daq.exe$(EXEEXT): mswin Makefile_wave2daq_win.qt $(wave2daq_exe_SOURCES)
 ifdef MXE_QMAKE
	make -f Makefile_wave2daq_win.qt
 else
	@echo MXE environment not installed, windows program not built
 endif

Makefile_wave2daq_win.qt: wave2daq_win.pro
	x86_64-w64-mingw32.static-qmake-qt5 wave2daq_win.pro -r -spec win32-g++ 'DEFINES+=VERSION=\\\"$(VERSION)\\\"'

Makefile_simbuild.qt: simbuild.pro Makefile.am configure.ac
	qmake simbuild.pro -r 'DEFINES+=VERSION=\\\"$(VERSION)\\\"' 'DEFINES+=DEBUG_OR_NOT=\\\"$(DEBUG_OR_NOT)\\\"'

#Makefile_simbuild_web514.qt: simbuild.pro
# ifdef WEB_QMAKE
#	/opt/qtbase-everywhere-src-5.14.0_web/qtbase/bin/qmake  simbuild.pro -r 'DEFINES+=VERSION=\\\"$(VERSION)\\\"' 'DEFINES+=Q_OS_LINUX' 'DEFINES+=DEBUG_OR_NOT=\\\"$(DEBUG_OR_NOT)\\\"'
# else
#	@echo QT Webassembly environment not installed, webassembly program not built
# endif

#Makefile_simviewer_web514.qt: simviewer.pro
# ifdef WEB_QMAKE
#	/opt/qtbase-everywhere-src-5.14.0_web/qtbase/bin/qmake  simviewer.pro -r 'DEFINES+=VERSION=\\\"$(VERSION)\\\"' 'DEFINES+=Q_OS_LINUX' 'DEFINES+=DEBUG_OR_NOT=\\\"$(DEBUG_OR_NOT)\\\"'
# else
#	@echo QT Webassembly environment not installed, webassembly program not built
# endif

#	/home/opt2/qtbase-everywhere-src-5.14.0_web/qtbase/bin/qmake  simviewer.pro -r 'DEFINES+=VERSION=\\\"$(VERSION)\\\"' 'DEFINES+=Q_OS_LINUX' 'DEFINES+=DEBUG_OR_NOT=\\\"$(DEBUG_OR_NOT)\\\"'

Makefile_simviewer.qt: simviewer.pro Makefile.am configure.ac
	qmake simviewer.pro -r 'DEFINES+=VERSION=\\\"$(VERSION)\\\"' 'DEFINES+=DEBUG_OR_NOT=\\\"$(DEBUG_OR_NOT)\\\"'

Makefile_simrun.qt: simrun.pro Makefile.am
	qmake simrun.pro -r 'DEFINES+=VERSION=\\\"$(VERSION)\\\"' 'DEFINES+=DEBUG_OR_NOT=\\\"$(DEBUG_OR_NOT)\\\"'

Makefile_simmsg.qt: simmsg.pro Makefile.am configure.ac
	@echo $(BUILT_SOURCES)
	qmake simmsg.pro -r 'DEFINES+=VERSION=\\\"$(VERSION)\\\"' 'DEFINES+=DEBUG_OR_NOT=\\\"$(DEBUG_OR_NOT)\\\"'

Makefile_simbuild_win.qt: simbuild.pro Makefile.am
	x86_64-w64-mingw32.static-qmake-qt5 simbuild.pro -r -spec win32-g++ 'DEFINES+=VERSION=\\\"$(VERSION)\\\"'

Makefile_simmsg_win.qt:  Makefile.am simmsg.pro
	x86_64-w64-mingw32.static-qmake-qt5 simmsg.pro -r -spec win32-g++ 'DEFINES+=VERSION=\\\"$(VERSION)\\\"'

Makefile_simviewer_win.qt: simviewer.pro Makefile.am
	x86_64-w64-mingw32.static-qmake-qt5 simviewer.pro -r -spec win32-g++ 'DEFINES+=VERSION=\\\"$(VERSION)\\\"'

Makefile_simrun_win.qt: simrun.pro Makefile.am
	x86_64-w64-mingw32.static-qmake-qt5 simrun.pro -r -spec win32-g++ 'DEFINES+=VERSION=\\\"$(VERSION)\\\"'

moc_%.cpp: %.h
	moc -o $@ $<

ui_%.h: %.ui
	uic -o $@ $<

qrc_%.cpp: %.qrc
	rcc -o $@ $<

checkin_release:
	git add $(checkin_files) && git commit -uno -S -m "Release files for version $(VERSION)"

checkpoint:
	git add $(checkin_files) && git commit -uno -S -q -m "checkpoint files for version $(VERSION)"

checkpoint_withcomment:
	git add $(checkin_files) && git commit -uno -S -q

deb:
	@echo 'Making debian packages'
	make distdir &&\
	cd $(distdir) &&\
	dpkg-buildpackage -Zgzip -uc -us && \
	cd .. && \
	rm -rf $(distdir)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
